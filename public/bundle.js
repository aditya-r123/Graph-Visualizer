(()=>{"use strict";var e={56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var d=e[s],l=o.base?d[0]+o.base:d[0],c=r[l]||0,h="".concat(l," ").concat(c);r[l]=c+1;var m=n(h),g={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==m)t[m].references++,t[m].updater(g);else{var p=i(g,o);o.byIndex=s,t.splice(s,0,{identifier:h,updater:p,references:1})}a.push(h)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var d=o(e,i),l=0;l<r.length;l++){var c=n(r[l]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=d}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n}).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),t.push(c))}},t}},365:(e,t,n)=>{n.d(t,{A:()=>s});var o=n(601),i=n.n(o),r=n(314),a=n.n(r)()(i());a.push([e.id,'/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    /* Dark Theme (Default) */\n    --primary-color: #6366f1;\n    --primary-dark: #4f46e5;\n    --secondary-color: #8b5cf6;\n    --accent-color: #06b6d4;\n    --success-color: #10b981;\n    --danger-color: #ef4444;\n    --warning-color: #f59e0b;\n    --info-color: #3b82f6;\n    \n    --bg-primary: #0f172a;\n    --bg-secondary: #1e293b;\n    --bg-tertiary: #334155;\n    --bg-card: rgba(30, 41, 59, 0.8);\n    \n    --text-primary: #f8fafc;\n    --text-secondary: #cbd5e1;\n    --text-muted: #64748b;\n    \n    --border-color: #475569;\n    --border-light: #64748b;\n    \n    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n    --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n    \n    --radius-sm: 0.375rem;\n    --radius-md: 0.5rem;\n    --radius-lg: 0.75rem;\n    --radius-xl: 1rem;\n    \n    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Light Theme */\n[data-theme="light"] {\n    --primary-color: #6366f1;\n    --primary-dark: #4f46e5;\n    --secondary-color: #8b5cf6;\n    --accent-color: #06b6d4;\n    --success-color: #10b981;\n    --danger-color: #ef4444;\n    --warning-color: #f59e0b;\n    --info-color: #3b82f6;\n    \n    --bg-primary: #ffffff;\n    --bg-secondary: #f8fafc;\n    --bg-tertiary: #e2e8f0;\n    --bg-card: rgba(248, 250, 252, 0.9);\n    \n    --text-primary: #1e293b;\n    --text-secondary: #475569;\n    --text-muted: #64748b;\n    \n    --border-color: #cbd5e1;\n    --border-light: #e2e8f0;\n    \n    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n    --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n}\n\nbody {\n    font-family: \'Inter\', -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif;\n    background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);\n    color: var(--text-primary);\n    min-height: 100vh;\n    overflow: hidden;\n    transition: var(--transition);\n}\n\n/* App Container */\n.app-container {\n    display: grid;\n    grid-template-columns: 320px 1fr;\n    grid-template-rows: 1fr auto;\n    height: 100vh;\n    gap: 0;\n}\n\n/* Sidebar */\n.sidebar {\n    background: var(--bg-card);\n    backdrop-filter: blur(20px);\n    border-right: 1px solid var(--border-color);\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    scrollbar-color: var(--border-color) transparent;\n    transition: var(--transition);\n}\n\n.sidebar::-webkit-scrollbar {\n    width: 6px;\n}\n\n.sidebar::-webkit-scrollbar-track {\n    background: transparent;\n}\n\n.sidebar::-webkit-scrollbar-thumb {\n    background: var(--border-color);\n    border-radius: 3px;\n}\n\n.sidebar-header {\n    padding: 1.5rem;\n    border-bottom: 1px solid var(--border-color);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.logo i {\n    font-size: 1.5rem;\n    color: var(--primary-color);\n}\n\n.logo h1 {\n    font-size: 1.25rem;\n    font-weight: 600;\n    color: var(--text-primary);\n}\n\n.theme-toggle {\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    padding: 0.5rem;\n    color: var(--text-primary);\n    cursor: pointer;\n    transition: var(--transition);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n}\n\n.theme-toggle:hover {\n    background: var(--border-color);\n    transform: scale(1.05);\n}\n\n.theme-icon {\n    position: relative;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.sun-icon,\n.moon-icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: var(--transition);\n}\n\n.sun-icon {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.8);\n}\n\n.moon-icon {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* Dark theme - show moon (default) */\n[data-theme="dark"] .sun-icon {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.8);\n}\n\n[data-theme="dark"] .moon-icon {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n}\n\n/* Light theme - show sun */\n[data-theme="light"] .sun-icon {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n}\n\n[data-theme="light"] .moon-icon {\n    opacity: 0;\n    transform: translate(-50%, -50%) scale(0.8);\n}\n\n/* Eye tracking animation */\n.eye-socket {\n    transition: all 0.1s ease-out;\n}\n\n.eye {\n    transition: all 0.1s ease-out;\n}\n\n.pupil {\n    transition: all 0.1s ease-out;\n    transform-origin: center;\n}\n\n.sidebar-content {\n    flex: 1;\n    padding: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    position: relative;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    scrollbar-color: var(--border-color) transparent;\n}\n\n/* Scroll Indicator */\n.scroll-indicator {\n    position: absolute;\n    bottom: 0.5rem;\n    right: 0.5rem;\n    background: var(--bg-card);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    padding: 0.5rem 0.75rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    z-index: 10;\n    opacity: 0;\n    transition: var(--transition);\n    box-shadow: var(--shadow-md);\n    backdrop-filter: blur(10px);\n    max-width: 200px;\n}\n\n.scroll-indicator.show {\n    opacity: 1;\n    animation: slideInUp 0.3s ease-out;\n}\n\n.scroll-arrow {\n    color: var(--primary-color);\n    animation: bounce 2s infinite;\n    font-size: 0.875rem;\n}\n\n.scroll-text {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n    font-weight: 500;\n    white-space: nowrap;\n}\n\n@keyframes slideInUp {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n        transform: translateY(0);\n    }\n    40% {\n        transform: translateY(-3px);\n    }\n    60% {\n        transform: translateY(-1px);\n    }\n}\n\n.control-section {\n    background: var(--bg-secondary);\n    border-radius: var(--radius-lg);\n    padding: 1.25rem;\n    border: 1px solid var(--border-color);\n    transition: var(--transition);\n}\n\n.control-section h3 {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--text-secondary);\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n.control-section h3 i {\n    color: var(--primary-color);\n}\n\n.control-group {\n    margin-bottom: 1.25rem;\n}\n\n.control-group:last-child {\n    margin-bottom: 0;\n}\n\n.control-group label {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 500;\n    color: var(--text-primary);\n    margin-bottom: 0.5rem;\n}\n\n.control-group label i {\n    color: var(--accent-color);\n    width: 16px;\n}\n\n.control-group small {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n    margin-top: 0.25rem;\n    display: block;\n}\n\n.slider-container {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n}\n\n.slider-container input[type="range"] {\n    flex: 1;\n    height: 6px;\n    background: var(--bg-tertiary);\n    border-radius: 3px;\n    outline: none;\n    -webkit-appearance: none;\n}\n\n.slider-container input[type="range"]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 18px;\n    height: 18px;\n    background: var(--primary-color);\n    border-radius: 50%;\n    cursor: pointer;\n    transition: var(--transition);\n}\n\n.slider-container input[type="range"]::-webkit-slider-thumb:hover {\n    background: var(--primary-dark);\n    transform: scale(1.1);\n}\n\n.slider-container span {\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--primary-color);\n    min-width: 2rem;\n    text-align: center;\n}\n\n.control-group input[type="number"],\n.control-group input[type="text"],\n.control-group select {\n    width: 100%;\n    padding: 0.75rem;\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    color: var(--text-primary);\n    font-size: 0.875rem;\n    transition: var(--transition);\n}\n\n.control-group input[type="number"]:focus,\n.control-group input[type="text"]:focus,\n.control-group select:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n}\n\n.control-group input[type="number"]::placeholder,\n.control-group input[type="text"]::placeholder {\n    color: var(--text-muted);\n}\n\n/* Color input styles */\n.control-group input[type="color"] {\n    width: 100%;\n    height: 40px;\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    background: var(--bg-secondary);\n    cursor: pointer;\n    transition: var(--transition);\n    padding: 0;\n    appearance: none;\n    -webkit-appearance: none;\n}\n\n.control-group input[type="color"]:hover {\n    border-color: var(--primary-color);\n    transform: scale(1.02);\n}\n\n.control-group input[type="color"]:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n}\n\n/* Color input webkit styles */\n.control-group input[type="color"]::-webkit-color-swatch-wrapper {\n    padding: 0;\n    border-radius: var(--radius-md);\n}\n\n.control-group input[type="color"]::-webkit-color-swatch {\n    border: none;\n    border-radius: var(--radius-md);\n    box-shadow: var(--shadow-sm);\n}\n\n.edit-label-container {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n}\n\n.edit-label-container input {\n    flex: 1;\n}\n\n.edit-label-buttons {\n    display: flex;\n    gap: 0.25rem;\n}\n\n.btn-sm {\n    padding: 0.375rem 0.5rem;\n    font-size: 0.75rem;\n    min-width: auto;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.btn-sm i {\n    font-size: 0.75rem;\n}\n\n/* Modal Styles */\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(10px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    animation: fadeIn 0.3s ease-out;\n}\n\n.modal-content {\n    background: var(--bg-card);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-lg);\n    padding: 2rem;\n    max-width: 500px;\n    width: 90%;\n    max-height: 80vh;\n    overflow-y: auto;\n    box-shadow: var(--shadow-xl);\n    animation: slideIn 0.3s ease-out;\n}\n\n.modal-content h3 {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    font-size: 1.25rem;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 1rem;\n}\n\n.modal-content h3 i {\n    color: var(--primary-color);\n}\n\n.modal-content p {\n    color: var(--text-secondary);\n    margin-bottom: 1.5rem;\n    line-height: 1.6;\n}\n\n.modal-buttons {\n    display: flex;\n    gap: 0.75rem;\n    justify-content: flex-end;\n    margin-top: 1.5rem;\n}\n\n.load-options {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.load-section {\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    padding: 1rem;\n}\n\n.load-section h4 {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--text-secondary);\n    margin-bottom: 0.75rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n.load-section h4 i {\n    color: var(--primary-color);\n}\n\n.load-graphs-list {\n    max-height: 200px;\n    overflow-y: auto;\n}\n\n.load-graph-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.75rem;\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    margin-bottom: 0.5rem;\n    background: var(--bg-secondary);\n    transition: var(--transition);\n}\n\n.load-graph-item:hover {\n    background: var(--bg-tertiary);\n    border-color: var(--primary-color);\n}\n\n.load-graph-info {\n    flex: 1;\n}\n\n.load-graph-name {\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 0.25rem;\n}\n\n.load-graph-details {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n    margin-bottom: 0.25rem;\n}\n\n.load-graph-time {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n}\n\n.load-graph-btn {\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n}\n\n.no-graphs {\n    text-align: center;\n    color: var(--text-muted);\n    font-style: italic;\n    padding: 1rem;\n}\n\n/* Buttons */\n.button-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n}\n\n.btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1rem;\n    border: none;\n    border-radius: var(--radius-md);\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: var(--transition);\n    text-decoration: none;\n    position: relative;\n    overflow: hidden;\n}\n\n.btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none !important;\n}\n\n.btn::before {\n    content: \'\';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n    transition: left 0.5s;\n}\n\n.btn:hover:not(:disabled)::before {\n    left: 100%;\n}\n\n.btn-primary {\n    background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));\n    color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.btn-primary.active {\n    background: linear-gradient(135deg, var(--success-color), #059669);\n    animation: pulse 2s infinite;\n}\n\n.btn-secondary {\n    background: var(--bg-tertiary);\n    color: var(--text-primary);\n    border: 1px solid var(--border-color);\n}\n\n.btn-secondary:hover:not(:disabled) {\n    background: var(--border-color);\n    transform: translateY(-1px);\n}\n\n.btn-success {\n    background: linear-gradient(135deg, var(--success-color), #059669);\n    color: white;\n}\n\n.btn-success:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.btn-danger {\n    background: linear-gradient(135deg, var(--danger-color), #dc2626);\n    color: white;\n}\n\n.btn-danger:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.btn-warning {\n    background: linear-gradient(135deg, var(--warning-color), #d97706);\n    color: white;\n}\n\n.btn-warning:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.btn-info {\n    background: linear-gradient(135deg, var(--info-color), #2563eb);\n    color: white;\n}\n\n.btn-info:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n/* Saved Graphs */\n.saved-graphs {\n    margin-top: 1rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--border-color);\n}\n\n.saved-graphs h4 {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 0.75rem;\n    font-weight: 600;\n    color: var(--text-secondary);\n    margin-bottom: 0.75rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n.saved-graphs h4 i {\n    color: var(--accent-color);\n}\n\n.saved-graphs-list {\n    max-height: 200px;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.saved-graph-item {\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-sm);\n    padding: 0.75rem;\n    cursor: pointer;\n    transition: var(--transition);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n}\n\n.saved-graph-item:hover {\n    background: var(--border-color);\n    transform: translateX(2px);\n    border-color: var(--primary-color);\n}\n\n.saved-graph-item::before {\n    content: \'📁\';\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translateY(-50%);\n    opacity: 0;\n    transition: var(--transition);\n    font-size: 0.875rem;\n}\n\n.saved-graph-item:hover::before {\n    opacity: 1;\n    left: -15px;\n}\n\n.saved-graph-info {\n    flex: 1;\n}\n\n.saved-graph-name {\n    font-size: 0.875rem;\n    font-weight: 500;\n    color: var(--text-primary);\n    margin-bottom: 0.25rem;\n}\n\n.saved-graph-details {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n}\n\n.saved-graph-time {\n    font-size: 0.7rem;\n    color: var(--text-muted);\n    font-style: italic;\n    margin-top: 0.25rem;\n}\n\n.saved-graph-actions {\n    display: flex;\n    gap: 0.25rem;\n}\n\n.saved-graph-actions button {\n    background: none;\n    border: none;\n    color: var(--text-muted);\n    cursor: pointer;\n    padding: 0.25rem;\n    border-radius: var(--radius-sm);\n    transition: var(--transition);\n}\n\n.saved-graph-actions button:hover {\n    background: var(--border-color);\n    color: var(--text-primary);\n}\n\n.saved-graph-actions .edit-name-btn:hover {\n    color: var(--info-color);\n}\n\n.saved-graph-actions .delete-btn:hover {\n    color: var(--danger-color);\n}\n\n/* Statistics */\n.stats-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n    margin-bottom: 1rem;\n}\n\n.stat-item {\n    background: var(--bg-tertiary);\n    border-radius: var(--radius-md);\n    padding: 1rem;\n    text-align: center;\n    border: 1px solid var(--border-color);\n    transition: var(--transition);\n}\n\n.stat-item:hover {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-md);\n}\n\n.stat-value {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--primary-color);\n    margin-bottom: 0.25rem;\n}\n\n.stat-label {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n/* Compact Statistics */\n.stats-compact {\n    display: flex;\n    gap: 1rem;\n    margin-bottom: 1rem;\n    align-items: center;\n}\n\n.stat-compact-item {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    background: var(--bg-tertiary);\n    border-radius: var(--radius-md);\n    padding: 0.5rem 0.75rem;\n    border: 1px solid var(--border-color);\n    transition: var(--transition);\n    flex: 1;\n    justify-content: center;\n}\n\n.stat-compact-item:hover {\n    transform: translateY(-1px);\n    box-shadow: var(--shadow-sm);\n    border-color: var(--primary-color);\n}\n\n.stat-compact-value {\n    font-size: 1.1rem;\n    font-weight: 700;\n    color: var(--primary-color);\n}\n\n.stat-compact-label {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n}\n\n.distance-info,\n.path-info,\n.search-info {\n    background: var(--bg-tertiary);\n    border-radius: var(--radius-md);\n    padding: 0.75rem;\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    border-left: 3px solid var(--accent-color);\n    display: none;\n    margin-top: 0.75rem;\n}\n\n.distance-info.show,\n.path-info.show,\n.search-info.show {\n    display: block;\n    animation: slideIn 0.3s ease-out;\n}\n\n.path-info {\n    border-left-color: var(--warning-color);\n}\n\n.search-info {\n    border-left-color: var(--success-color);\n}\n\n@keyframes slideIn {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Main Content */\n.main-content {\n    position: relative;\n    background: var(--bg-primary);\n    overflow: hidden;\n    transition: var(--transition);\n}\n\n.canvas-container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n\n#graphCanvas {\n    width: 100%;\n    height: 100%;\n    background: var(--bg-primary);\n    cursor: crosshair;\n    display: block;\n    transition: var(--transition);\n}\n\n/* Instructions Overlay */\n.instructions-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(15, 23, 42, 0.95);\n    backdrop-filter: blur(10px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    animation: fadeIn 0.3s ease-out;\n}\n\n[data-theme="light"] .instructions-overlay {\n    background: rgba(255, 255, 255, 0.95);\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n.instructions-content {\n    background: var(--bg-card);\n    border-radius: var(--radius-xl);\n    padding: 2rem;\n    max-width: 500px;\n    max-height: 90vh;\n    width: 90%;\n    border: 1px solid var(--border-color);\n    box-shadow: var(--shadow-xl);\n    transition: var(--transition);\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n\n.instructions-content h3 {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: var(--text-primary);\n    margin-bottom: 1rem;\n    text-align: center;\n}\n\n.instructions-content h3 i {\n    color: var(--warning-color);\n}\n\n.instruction-grid {\n    display: grid;\n    gap: 0.75rem;\n    margin-bottom: 1rem;\n}\n\n.instruction-item {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    padding: 0.75rem;\n    background: var(--bg-secondary);\n    border-radius: var(--radius-md);\n    border: 1px solid var(--border-color);\n    transition: var(--transition);\n}\n\n.instruction-item:hover {\n    transform: translateX(3px);\n    border-color: var(--primary-color);\n}\n\n.instruction-icon {\n    width: 32px;\n    height: 32px;\n    background: var(--primary-color);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-size: 0.875rem;\n    flex-shrink: 0;\n}\n\n.instruction-text {\n    font-size: 0.8rem;\n    color: var(--text-secondary);\n    line-height: 1.3;\n}\n\n.instruction-text strong {\n    color: var(--text-primary);\n}\n\n/* Status Bar */\n.status-bar {\n    grid-column: 1 / -1;\n    background: linear-gradient(135deg, var(--bg-card) 0%, var(--bg-secondary) 100%);\n    border-top: 1px solid var(--border-color);\n    padding: 1rem 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    transition: var(--transition);\n    position: relative;\n    overflow: hidden;\n    gap: 2rem;\n}\n\n.status-bar::before {\n    content: \'\';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: linear-gradient(90deg, transparent, var(--primary-color), transparent);\n    opacity: 0.3;\n}\n\n.status-item {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    position: relative;\n    z-index: 1;\n    padding: 0.5rem 1rem;\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    transition: var(--transition);\n    flex: 1;\n    justify-content: center;\n    min-height: 40px;\n}\n\n.status-item:hover {\n    border-color: var(--primary-color);\n    background: var(--bg-secondary);\n    transform: translateY(-1px);\n    box-shadow: var(--shadow-sm);\n}\n\n.status-item i {\n    color: var(--accent-color);\n    transition: var(--transition);\n}\n\n.status-item strong {\n    background: linear-gradient(135deg, var(--primary-color), var(--accent-color));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    font-weight: 600;\n    transition: var(--transition);\n}\n\n.status-item:hover strong {\n    background: linear-gradient(135deg, var(--accent-color), var(--primary-color));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n/* LinkedIn link styling */\n.linkedin-link {\n    color: inherit;\n    text-decoration: none;\n    transition: var(--transition);\n    position: relative;\n    display: inline-block;\n}\n\n.linkedin-link:hover {\n    color: var(--primary-color);\n    transform: scale(1.05);\n}\n\n.linkedin-link::after {\n    content: \'🔗\';\n    position: absolute;\n    right: -20px;\n    top: 50%;\n    transform: translateY(-50%);\n    opacity: 0;\n    transition: var(--transition);\n    font-size: 0.75rem;\n}\n\n.linkedin-link:hover::after {\n    opacity: 1;\n    right: -25px;\n}\n\n/* Contact link styling */\n.contact-status-item {\n    cursor: pointer;\n}\n\n.contact-link {\n    color: inherit;\n    text-decoration: none;\n    transition: var(--transition);\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    pointer-events: none;\n}\n\n.contact-status-item:hover .contact-link {\n    color: var(--primary-color);\n    transform: scale(1.05);\n}\n\n/* Contact button in status bar */\n.contact-item {\n    flex-shrink: 0;\n    margin-left: auto;\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n    .app-container {\n        grid-template-columns: 280px 1fr;\n    }\n    \n    .sidebar-content {\n        padding: 1rem;\n    }\n}\n\n@media (max-width: 768px) {\n    .app-container {\n        grid-template-columns: 1fr;\n        grid-template-rows: auto 1fr auto;\n    }\n    \n    .sidebar {\n        order: 2;\n        border-right: none;\n        border-top: 1px solid var(--border-color);\n        max-height: 300px;\n    }\n    \n    .main-content {\n        order: 1;\n    }\n    \n    .status-bar {\n        order: 3;\n    }\n    \n    .stats-grid {\n        grid-template-columns: 1fr 1fr;\n    }\n}\n\n@media (max-width: 480px) {\n    .sidebar-content {\n        padding: 0.75rem;\n    }\n    \n    .control-section {\n        padding: 1rem;\n    }\n    \n    .instructions-content {\n        padding: 1.5rem;\n        margin: 1rem;\n    }\n    \n    .instruction-item {\n        flex-direction: column;\n        text-align: center;\n        gap: 0.75rem;\n    }\n}\n\n/* Canvas-specific styles for better interaction */\n#graphCanvas {\n    touch-action: none;\n}\n\n/* Selection states for vertices */\n.vertex-selected {\n    animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n    0%, 100% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.05);\n    }\n}\n\n/* Hover effects for better UX */\n.control-group:hover {\n    transform: translateY(-1px);\n}\n\n.stat-item:hover .stat-value {\n    color: var(--accent-color);\n}\n\n/* Expandable Section Styles */\n.expandable-header {\n    cursor: pointer;\n    user-select: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--transition);\n}\n\n.expandable-header:hover {\n    color: var(--primary-color);\n}\n\n.expand-icon {\n    font-size: 0.875rem;\n    transition: var(--transition);\n    color: var(--text-muted);\n}\n\n.expandable-header:hover .expand-icon {\n    color: var(--primary-color);\n}\n\n.expandable-header.expanded .expand-icon {\n    transform: rotate(180deg);\n    color: var(--primary-color);\n}\n\n.expandable-content {\n    overflow: hidden;\n    transition: all 0.3s ease-out;\n}\n\n.expandable-content.show {\n    display: block !important;\n    animation: slideDown 0.3s ease-out;\n}\n\n@keyframes slideDown {\n    from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Search animation states */\n.vertex-visited {\n    animation: visited 0.5s ease-out;\n}\n\n.vertex-path {\n    animation: path 0.5s ease-out;\n}\n\n@keyframes visited {\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.2);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n\n@keyframes path {\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.3);\n    }\n    100% {\n        transform: scale(1);\n    }\n} \n\n/* Edit Mode Styles */\n.edit-mode-info {\n    background: var(--bg-tertiary);\n    border-radius: var(--radius-md);\n    padding: 1rem;\n    margin-bottom: 1rem;\n    border-left: 3px solid var(--accent-color);\n}\n\n.edit-mode-info-text {\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n}\n\n.edit-mode-item {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-bottom: 0.5rem;\n}\n\n.edit-mode-item:last-child {\n    margin-bottom: 0;\n}\n\n.edit-mode-item i {\n    color: var(--accent-color);\n    width: 16px;\n    text-align: center;\n}\n\n.edit-mode-item strong {\n    color: var(--text-primary);\n    font-weight: 600;\n}\n\n#editControlsSection {\n    border: 2px solid var(--accent-color);\n    background: var(--bg-secondary);\n}\n\n#editControlsSection h3 {\n    color: var(--accent-color);\n}\n\n/* Edit Controls Grid Layout */\n.edit-controls-grid {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin-top: 1rem;\n}\n\n.edit-control-row {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 1rem;\n}\n\n.edit-control-row .control-group {\n    margin-bottom: 0;\n}\n\n/* Switch Styling */\n.switch-label {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n    font-size: 0.875rem;\n    color: var(--text-primary);\n    margin-bottom: 0;\n    padding: 0.5rem 0;\n}\n\n.switch-label i {\n    color: var(--accent-color);\n    width: 16px;\n    text-align: center;\n    margin-right: 0.5rem;\n}\n\n.switch-container {\n    position: relative;\n    display: inline-block;\n    width: 44px;\n    height: 24px;\n}\n\n.switch-container input[type="checkbox"] {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.switch-slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    transition: var(--transition);\n    border-radius: 24px;\n}\n\n.switch-slider:before {\n    position: absolute;\n    content: "";\n    height: 18px;\n    width: 18px;\n    left: 2px;\n    bottom: 2px;\n    background-color: var(--text-muted);\n    transition: var(--transition);\n    border-radius: 50%;\n}\n\n.switch-container input:checked + .switch-slider {\n    background-color: var(--primary-color);\n    border-color: var(--primary-color);\n}\n\n.switch-container input:checked + .switch-slider:before {\n    transform: translateX(20px);\n    background-color: white;\n}\n\n.switch-container:hover .switch-slider {\n    border-color: var(--primary-color);\n}\n\n/* Checkbox Styling (keeping for other uses) */\n.checkbox-label {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n    font-size: 0.875rem;\n    color: var(--text-primary);\n    margin-bottom: 0;\n}\n\n.checkbox-label input[type="checkbox"] {\n    display: none;\n}\n\n.checkmark {\n    width: 18px;\n    height: 18px;\n    background: var(--bg-tertiary);\n    border: 2px solid var(--border-color);\n    border-radius: var(--radius-sm);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: var(--transition);\n}\n\n.checkbox-label input[type="checkbox"]:checked + .checkmark {\n    background: var(--primary-color);\n    border-color: var(--primary-color);\n}\n\n.checkbox-label input[type="checkbox"]:checked + .checkmark::after {\n    content: \'✓\';\n    color: white;\n    font-size: 0.75rem;\n    font-weight: bold;\n}\n\n.checkbox-label:hover .checkmark {\n    border-color: var(--primary-color);\n}\n\n.checkbox-label i {\n    color: var(--accent-color);\n    width: 16px;\n    text-align: center;\n}\n\n#vertexEditControls,\n#edgeEditControls {\n    margin-top: 1rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--border-color);\n}\n\n#vertexEditControls h4,\n#edgeEditControls h4 {\n    color: var(--text-primary);\n    font-size: 0.875rem;\n    font-weight: 600;\n    margin-bottom: 0.75rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n/* Shake animation for edit mode */\n@keyframes shake {\n    0%, 100% { transform: translateX(0); }\n    25% { transform: translateX(-0.1px); }\n    75% { transform: translateX(0.1px); }\n}\n\n.edit-mode-shake {\n    animation: shake 0.1s infinite;\n} \n\n.instructions-close {\n    position: absolute;\n    top: 0.75rem;\n    right: 1rem;\n    background: transparent;\n    border: none;\n    color: var(--text-secondary);\n    font-size: 1.25rem;\n    cursor: pointer;\n    z-index: 10;\n    transition: color 0.2s;\n}\n.instructions-close:hover {\n    color: var(--danger-color);\n} \n\n/* Target Vertex Display */\n.target-vertex-display {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    position: relative;\n}\n\n#resetTargetBtn {\n    opacity: 0.5;\n    background: none;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    transition: opacity 0.2s;\n    position: absolute;\n    top: 6px;\n    right: 6px;\n    z-index: 2;\n    padding: 0;\n    margin: 0;\n    font-size: 1rem;\n    color: var(--text-muted);\n    cursor: pointer;\n}\n\n#resetTargetBtn:hover {\n    opacity: 1;\n    color: var(--primary-color);\n}\n\n.target-vertex-display:hover #resetTargetBtn {\n    opacity: 1;\n}\n\n.target-display {\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    border-radius: var(--radius-md);\n    padding: 0.75rem;\n    min-height: 40px;\n    display: flex;\n    align-items: center;\n    transition: var(--transition);\n}\n\n.target-display.has-target {\n    border-color: var(--primary-color);\n    background: var(--bg-secondary);\n}\n\n.target-placeholder {\n    color: var(--text-muted);\n    font-style: italic;\n    font-size: 0.875rem;\n}\n\n.target-vertex-info {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    color: var(--text-primary);\n    font-weight: 500;\n}\n\n.target-vertex-icon {\n    width: 20px;\n    height: 20px;\n    background: var(--primary-color);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-size: 0.75rem;\n    font-weight: bold;\n}\n\n.target-vertex-label {\n    font-size: 0.875rem;\n}\n\n.target-vertex-coords {\n    font-size: 0.75rem;\n    color: var(--text-muted);\n    margin-left: auto;\n} \n\n\n\n.btn-outline-primary {\n    background: transparent;\n    border: 2px solid var(--primary-color);\n    color: var(--primary-color);\n    transition: var(--transition);\n    font-weight: 500;\n    padding: 0.5rem 1rem;\n    border-radius: var(--radius-md);\n    position: relative;\n    overflow: hidden;\n}\n\n.btn-outline-primary::before {\n    content: \'\';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n    transition: left 0.5s;\n}\n\n.btn-outline-primary:hover {\n    background: var(--primary-color);\n    color: white;\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n    border-color: var(--primary-color);\n}\n\n.btn-outline-primary:hover::before {\n    left: 100%;\n}\n\n.btn-outline-primary i {\n    margin-right: 0.5rem;\n    transition: var(--transition);\n}\n\n.btn-outline-primary:hover i {\n    transform: scale(1.1);\n}\n\n/* Contact Modal Styles */\n#contactModal .modal-content {\n    background: var(--bg-card);\n    border: 6px solid var(--border-color);\n    color: var(--text-primary);\n    box-shadow: var(--shadow-xl);\n    border-radius: var(--radius-lg);\n}\n\n#contactModal .modal-header {\n    background: var(--bg-secondary);\n    border-bottom: 1px solid var(--border-color);\n}\n\n#contactModal .modal-title {\n    color: var(--text-primary);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#contactModal .modal-title i {\n    color: var(--primary-color);\n}\n\n#contactModal .modal-body {\n    background: var(--bg-card);\n}\n\n#contactModal .modal-footer {\n    background: var(--bg-secondary);\n    border-top: 1px solid var(--border-color);\n}\n\n#contactModal .form-label {\n    color: var(--text-primary);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-weight: 500;\n}\n\n#contactModal .form-label i {\n    color: var(--accent-color);\n    width: 16px;\n    text-align: center;\n}\n\n#contactModal .form-control {\n    background: var(--bg-tertiary);\n    border: 1px solid var(--border-color);\n    color: var(--text-primary);\n    transition: var(--transition);\n}\n\n#contactModal .form-control:focus {\n    background: var(--bg-secondary);\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n    color: var(--text-primary);\n}\n\n#contactModal .form-control::placeholder {\n    color: var(--text-muted);\n}\n\n#contactModal textarea.form-control {\n    resize: vertical;\n    min-height: 100px;\n}\n\n/* Responsive Status Bar */\n@media (max-width: 768px) {\n    .status-bar {\n        padding: 0.75rem 1rem;\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n    \n    .status-item {\n        font-size: 0.8rem;\n        padding: 0.4rem 0.75rem;\n        min-height: 36px;\n    }\n    \n    .app-container {\n        grid-template-rows: auto 1fr auto;\n    }\n}\n\n@media (max-width: 480px) {\n    .status-bar {\n        padding: 0.75rem 1rem;\n        flex-direction: column;\n        gap: 0.75rem;\n        align-items: stretch;\n    }\n    \n    .status-item {\n        font-size: 0.75rem;\n        padding: 0.5rem 0.75rem;\n        min-height: 40px;\n        justify-content: center;\n    }\n    \n    .btn-outline-primary {\n        padding: 0.4rem 0.8rem;\n        font-size: 0.8rem;\n    }\n} ',""]);const s=a},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o=n(72),i=n.n(o),r=n(825),a=n.n(r),s=n(659),d=n.n(s),l=n(56),c=n.n(l),h=n(540),m=n.n(h),g=n(113),p=n.n(g),u=n(365),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=d().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=m(),i()(u.A,v),u.A&&u.A.locals&&u.A.locals;class f{constructor(){this.canvas=document.getElementById("graphCanvas"),this.ctx=this.canvas.getContext("2d"),this.vertices=[],this.edges=[],this.nextVertexId=1,this.selectedVertices=[],this.draggedVertex=null,this.isDragging=!1,this.vertexSize=25,this.edgeType="straight",this.edgeDirection="undirected",this.defaultEdgeWeight=null,this.isDistanceMode=!1,this.distanceModeVertices=[],this.isSearching=!1,this.searchAnimation=null,this.visitedVertices=new Set,this.pathVertices=new Set,this.currentTheme="dark",this.savedGraphs=[],this.autoSaveInterval=null,this.editingVertex=null,this.lastSavedState=null,this.autosaveEnabled=!0,this.selectedTargetVertex=null,this.draggedEdge=null,this.isDraggingEdge=!1,this.edgeControlPointSize=8,this.longPressTimer=null,this.longPressDuration=2e3,this.isLongPressing=!1,this.editModeElement=null,this.editModeType=null,this.shakeAnimation=null,this.shakeOffset=0,this.shakeDirection=1,this.applyToAllVertices=!1,this.applyToAllEdges=!1,this.flashingVertices=new Set,this.distanceFlashingVertices=null,this.flashTimer=null,this.vertexColor="#1e293b",this.vertexBorderColor="#475569",this.vertexFontSize=14,this.vertexFontFamily="Inter",this.vertexFontColor="#ffffff",this.edgeColor="#6366f1",this.edgeWidth=3,this.edgeFontSize=14,this.edgeFontFamily="Inter",this.edgeFontColor="#06b6d4",this.initializeCanvas(),this.initializeEventListeners(),this.startAutoSave(),this.loadSavedGraphs(),this.updateInfo(),this.updateTime(),this.updateTargetVertexDisplay(),setInterval(()=>this.updateTime(),1e3),this.setupResetTargetBtn(),this.setupMinimalEditModeEvents(),this.setupExpandableSections()}initializeCanvas(){this.resizeCanvas(),window.addEventListener("resize",()=>{this.resizeCanvas(),this.draw()}),this.updateRootDropdown()}resizeCanvas(){const e=this.canvas.parentElement;this.canvas.width=e.clientWidth,this.canvas.height=e.clientHeight}initializeEventListeners(){this.canvas.addEventListener("click",e=>this.handleCanvasClick(e)),this.canvas.addEventListener("contextmenu",e=>this.handleRightClick(e)),this.canvas.addEventListener("mousedown",e=>this.handleMouseDown(e)),this.canvas.addEventListener("mousemove",e=>this.handleMouseMove(e)),this.canvas.addEventListener("mouseup",e=>this.handleMouseUp(e)),document.getElementById("vertexSize").addEventListener("input",e=>{this.vertexSize=parseInt(e.target.value),document.getElementById("vertexSizeValue").textContent=this.vertexSize,this.draw()}),document.getElementById("edgeType").addEventListener("change",e=>{this.edgeType=e.target.value,this.draw()}),document.getElementById("edgeDirection").addEventListener("change",e=>{this.edgeDirection=e.target.value,this.draw()}),document.getElementById("calculateDistance").addEventListener("click",()=>{this.toggleDistanceMode()}),document.getElementById("clearGraph").addEventListener("click",()=>{this.clearGraph()}),document.getElementById("autosaveToggle").addEventListener("change",e=>{this.autosaveEnabled=e.target.checked,this.updateStatus("Auto-save "+(this.autosaveEnabled?"enabled":"disabled"))}),document.getElementById("hideInstructions").addEventListener("click",()=>{this.hideInstructions()}),document.getElementById("themeToggle").addEventListener("click",()=>{this.toggleTheme()}),document.getElementById("runBFS").addEventListener("click",()=>{this.runBFS()}),document.getElementById("runDFS").addEventListener("click",()=>{this.runDFS()}),document.getElementById("stopSearch").addEventListener("click",()=>{this.stopSearch()}),document.querySelector(".contact-status-item").addEventListener("click",()=>{this.showContactModal()}),document.getElementById("contactForm").addEventListener("submit",e=>{e.preventDefault(),this.handleContactSubmit()});const e=document.getElementById("saveGraph"),t=document.getElementById("loadGraph"),n=document.getElementById("takeScreenshot");e?e.addEventListener("click",()=>{console.log("Save Graph button clicked"),this.saveGraph()}):console.error("Save Graph button not found!"),t?t.addEventListener("click",()=>{console.log("Load Graph button clicked"),this.showLoadConfirmation()}):console.error("Load Graph button not found!"),n?n.addEventListener("click",()=>{console.log("Take Screenshot button clicked"),this.takeScreenshot()}):console.error("Take Screenshot button not found!"),document.getElementById("loadFileInput").addEventListener("change",e=>{this.handleFileLoad(e)}),document.getElementById("saveLabelBtn").addEventListener("click",()=>{this.saveVertexLabel()}),document.getElementById("cancelLabelBtn").addEventListener("click",()=>{this.cancelVertexLabelEdit()}),document.getElementById("editVertexLabel").addEventListener("keypress",e=>{"Enter"===e.key&&this.saveVertexLabel()}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.editingVertex?this.cancelVertexLabelEdit():"Escape"===e.key&&this.editModeElement&&this.exitEditMode()}),this.canvas.addEventListener("contextmenu",e=>e.preventDefault())}startAutoSave(){this.autoSaveInterval=setInterval(()=>{this.vertices.length>0&&this.autoSave()},3e4)}autoSave(){if(!this.hasUnsavedChanges())return;const e=this.exportGraph(),t=(new Date).toISOString(),n={name:`Graph ${(new Date).toLocaleDateString()}`,data:e,timestamp:t,vertices:this.vertices.length,edges:this.edges.length,isAutoSave:!0};try{localStorage.setItem("graph_autosave_current",JSON.stringify(n)),this.updateStatus("Graph auto-saved")}catch(e){console.error("Auto-save failed:",e)}}loadSavedGraphs(){try{const e=localStorage.getItem("savedGraphs");if(e){const t=JSON.parse(e);this.savedGraphs=t.map(e=>e.data?e:{name:e.name||"Unnamed Graph",data:e,timestamp:e.timestamp||(new Date).toISOString(),vertices:e.vertices||0,edges:e.edges||0}),this.updateSavedGraphsList()}}catch(e){console.error("Failed to load saved graphs:",e)}}updateSavedGraphsList(){const e=document.getElementById("savedGraphsList");e.innerHTML="",this.savedGraphs.slice(0,5).forEach((t,n)=>{const o=document.createElement("div");o.className="saved-graph-item",o.innerHTML=`\n                <div class="saved-graph-info">\n                    <div class="saved-graph-name" data-index="${n}">${t.name}</div>\n                    <div class="saved-graph-details">${t.vertices} vertices, ${t.edges} edges</div>\n                    <div class="saved-graph-time">Last edited: ${new Date(t.timestamp).toLocaleString()}</div>\n                </div>\n                <div class="saved-graph-actions">\n                    <button class="edit-name-btn" title="Edit graph name">\n                        <i class="fas fa-edit"></i>\n                    </button>\n                    <button class="delete-btn" title="Delete saved graph">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                </div>\n            `,o.addEventListener("click",()=>{this.loadSavedGraphWithConfirmation(t)});const i=o.querySelector(".edit-name-btn"),r=o.querySelector(".delete-btn"),a=o.querySelector(".saved-graph-name");i.addEventListener("click",e=>{e.stopPropagation(),this.editSavedGraphName(n,a)}),r.addEventListener("click",e=>{e.stopPropagation(),this.deleteSavedGraph(t.id)}),e.appendChild(o)})}getTimestampString(){const e=new Date;return e.getFullYear()+"-"+String(e.getMonth()+1).padStart(2,"0")+"-"+String(e.getDate()).padStart(2,"0")+" "+String(e.getHours()).padStart(2,"0")+":"+String(e.getMinutes()).padStart(2,"0")+":"+String(e.getSeconds()).padStart(2,"0")}saveGraph(e=!1){if(console.log("saveGraph function called",e?"(auto-save)":"(manual)"),0===this.vertices.length)return void this.updateStatus("No graph to save");let t,n=this.currentGraphId;if(n){const e=this.savedGraphs.find(e=>e.id===n);t=e?e.name:this.getTimestampString()}else n=Date.now(),this.currentGraphId=n,t=this.getTimestampString();const o=this.exportGraph(),i=(new Date).toISOString(),r={id:n,name:t,data:o,timestamp:i,vertices:this.vertices.length,edges:this.edges.length},a=this.savedGraphs.findIndex(e=>e.id===n);-1!==a?this.savedGraphs[a]=r:this.savedGraphs.unshift(r),this.savedGraphs.length>10&&(this.savedGraphs=this.savedGraphs.slice(0,10));try{localStorage.setItem("savedGraphs",JSON.stringify(this.savedGraphs)),this.updateSavedGraphsList(),this.lastSavedState=JSON.stringify({vertices:this.vertices.map(e=>({id:e.id,x:e.x,y:e.y,label:e.label})),edges:this.edges.map(e=>({from:e.from.id,to:e.to.id,weight:e.weight,type:e.type}))}),e||this.updateStatus(`Graph "${t}" saved successfully!`)}catch(e){console.error("Failed to save graph:",e),this.updateStatus("Failed to save graph")}}loadSavedGraphWithConfirmation(e){console.log("loadSavedGraphWithConfirmation called",e),this.hasUnsavedChanges()?this.saveCurrentGraphAndLoadSpecific(e):this.loadSavedGraph(e)}loadSavedGraph(e){console.log("loadSavedGraph called",e);try{this.vertices=[],this.edges=[],this.nextVertexId=1,this.selectedVertices=[],this.draggedVertex=null,this.isDragging=!1,this.distanceModeVertices=[],this.isDistanceMode=!1,this.visitedVertices.clear(),this.pathVertices.clear(),this.isSearching=!1,this.editingVertex=null,this.selectedTargetVertex=null,this.currentGraphId=e.id,this.importGraph(e.data),this.updateTargetVertexDisplay(),this.updateInfo(),this.updateRootDropdown(),this.draw(),this.updateStatus(`Loaded graph: "${e.name}"`),console.log("Graph loaded successfully")}catch(e){console.error("Failed to load saved graph:",e),this.updateStatus("Failed to load saved graph")}}saveCurrentGraphAndLoadSpecific(e){const t=this.exportGraph(),n=(new Date).toISOString(),o=this.getTimestampString(),i={id:Date.now(),name:o,data:t,timestamp:n,vertices:this.vertices.length,edges:this.edges.length};this.savedGraphs.unshift(i),this.savedGraphs.length>10&&(this.savedGraphs=this.savedGraphs.slice(0,10));try{localStorage.setItem("savedGraphs",JSON.stringify(this.savedGraphs)),this.updateSavedGraphsList(),this.updateStatus("Current graph saved before loading new graph")}catch(e){console.error("Failed to save graph:",e),this.updateStatus("Failed to save current graph")}this.loadSavedGraph(e)}loadGraph(){document.getElementById("loadFileInput").click()}handleFileLoad(e){const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{try{const n=JSON.parse(e.target.result);this.importGraph(n),this.currentGraphId=null,this.updateStatus(`Loaded graph from file: ${t.name}`)}catch(e){console.error("Failed to parse graph file:",e),this.updateStatus("Invalid graph file format")}},n.readAsText(t),e.target.value=""}takeScreenshot(){console.log("takeScreenshot function called"),console.log("Canvas dimensions:",this.canvas.width,"x",this.canvas.height),console.log("Number of vertices:",this.vertices.length),console.log("Number of edges:",this.edges.length);try{const e=document.createElement("canvas"),t=e.getContext("2d");console.log("Created temporary canvas"),e.width=this.canvas.width,e.height=this.canvas.height,console.log("Set temp canvas size to:",e.width,"x",e.height),t.fillStyle="#ffffff",t.fillRect(0,0,e.width,e.height),console.log("Filled background"),console.log("Drawing edges..."),this.edges.forEach((e,n)=>{console.log(`Drawing edge ${n}:`,e.from.label,"->",e.to.label),this.drawSimpleEdge(t,e)}),console.log("Drawing vertices..."),this.vertices.forEach((e,n)=>{console.log(`Drawing vertex ${n}:`,e.label,"at",e.x,e.y),this.drawSimpleVertex(t,e)}),console.log("Starting blob conversion..."),e.toBlob(e=>{if(console.log("Blob callback executed, blob:",e),e){console.log("Blob size:",e.size,"bytes");const t=URL.createObjectURL(e);console.log("Created object URL:",t);const n=document.createElement("a");n.href=t,n.download=`graph-screenshot-${(new Date).toISOString().slice(0,19).replace(/:/g,"-")}.jpg`,n.style.display="none",document.body.appendChild(n),console.log("Triggering download..."),n.click(),document.body.removeChild(n),URL.revokeObjectURL(t),this.updateStatus("Screenshot saved as JPG!"),console.log("Screenshot downloaded successfully")}else console.error("Failed to create blob for screenshot"),this.updateStatus("Failed to create screenshot")},"image/jpeg",.9),console.log("toBlob called, waiting for callback...")}catch(e){console.error("Error taking screenshot:",e),console.error("Error stack:",e.stack),this.updateStatus("Error taking screenshot")}}drawSimpleEdge(e,t){if(e.strokeStyle="#000000",e.lineWidth=2,e.lineCap="round",e.beginPath(),e.moveTo(t.from.x,t.from.y),e.lineTo(t.to.x,t.to.y),e.stroke(),"undirected"!==t.direction&&this.drawSimpleArrow(e,t),null!==t.weight&&""!==t.weight){const n=(t.from.x+t.to.x)/2,o=(t.from.y+t.to.y)/2;e.fillStyle="#ffffff",e.fillRect(n-15,o-8,30,16),e.fillStyle="#000000",e.font="12px Arial",e.textAlign="center",e.textBaseline="middle",e.fillText(t.weight.toString(),n,o)}}drawSimpleArrow(e,t){const n=Math.PI/6,o=t.to.x-t.from.x,i=t.to.y-t.from.y,r=Math.atan2(i,o);let a,s;"directed-backward"===t.direction?(r+=Math.PI,a=t.from.x,s=t.from.y):(a=t.to.x,s=t.to.y);const d=this.vertexSize+3,l=a-d*Math.cos(r),c=s-d*Math.sin(r);e.strokeStyle="#000000",e.lineWidth=2,e.lineCap="round",e.beginPath(),e.moveTo(l,c),e.lineTo(l-10*Math.cos(r-n),c-10*Math.sin(r-n)),e.moveTo(l,c),e.lineTo(l-10*Math.cos(r+n),c-10*Math.sin(r+n)),e.stroke()}drawSimpleVertex(e,t){const n=this.vertexSize;e.beginPath(),e.arc(t.x,t.y,n,0,2*Math.PI),e.fillStyle="#ffffff",e.fill(),e.strokeStyle="#000000",e.lineWidth=2,e.stroke(),e.font="14px Arial",e.fillStyle="#000000",e.textAlign="center",e.textBaseline="middle",e.fillText(t.label,t.x,t.y)}drawEdgeForScreenshot(e,t){const n=t.color||this.edgeColor,o=t.width||this.edgeWidth,i=t.fontSize||this.edgeFontSize,r=t.fontFamily||this.edgeFontFamily,a=t.fontColor||this.edgeFontColor;if(e.strokeStyle=n,e.lineWidth=o,e.lineCap="round",e.lineJoin="round",e.beginPath(),"curved"===t.type){const n={x:(t.from.x+t.to.x)/2,y:(t.from.y+t.to.y)/2-40};e.moveTo(t.from.x,t.from.y),e.quadraticCurveTo(n.x,n.y,t.to.x,t.to.y)}else e.moveTo(t.from.x,t.from.y),e.lineTo(t.to.x,t.to.y);if(e.stroke(),"undirected"!==t.direction&&this.drawArrowForScreenshot(e,t),null!==t.weight&&""!==t.weight){let n,o;"curved"===t.type?(n=(t.from.x+t.to.x)/2,o=(t.from.y+t.to.y)/2-60):(n=(t.from.x+t.to.x)/2,o=(t.from.y+t.to.y)/2),e.fillStyle="dark"===this.currentTheme?"rgba(15, 23, 42, 0.9)":"rgba(255, 255, 255, 0.9)",e.fillRect(n-20,o-12,40,24),e.fillStyle=a,e.font=`bold ${i}px ${r}`,e.textAlign="center",e.textBaseline="middle",e.fillText(t.weight.toString(),n,o)}}drawArrowForScreenshot(e,t){const n=Math.PI/6;let o,i,r;if("curved"===t.type){const e={x:(t.from.x+t.to.x)/2,y:(t.from.y+t.to.y)/2-40},n=t.to.x-e.x,o=t.to.y-e.y;r=Math.atan2(o,n)}else{const e=t.to.x-t.from.x,n=t.to.y-t.from.y;r=Math.atan2(n,e)}"directed-backward"===t.direction?(r+=Math.PI,o=t.from.x,i=t.from.y):(o=t.to.x,i=t.to.y);const a=(t.from.size||this.vertexSize)+5,s=o-a*Math.cos(r),d=i-a*Math.sin(r);e.strokeStyle=t.color||this.edgeColor,e.lineWidth=t.width||this.edgeWidth,e.lineCap="round",e.lineJoin="round",e.beginPath(),e.moveTo(s,d),e.lineTo(s-15*Math.cos(r-n),d-15*Math.sin(r-n)),e.moveTo(s,d),e.lineTo(s-15*Math.cos(r+n),d-15*Math.sin(r+n)),e.stroke()}drawVertexForScreenshot(e,t){const n=t.color||this.vertexColor,o=t.borderColor||this.vertexBorderColor,i=t.fontSize||this.vertexFontSize,r=t.fontFamily||this.vertexFontFamily,a=t.fontColor||this.vertexFontColor,s=t.size||this.vertexSize;e.beginPath(),e.arc(t.x,t.y,s,0,2*Math.PI),e.fillStyle=n,e.fill(),e.strokeStyle=o,e.lineWidth=2,e.stroke(),e.font=`${i}px ${r}`,e.fillStyle=a,e.textAlign="center",e.textBaseline="middle",e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowBlur=2,e.shadowOffsetX=1,e.shadowOffsetY=1,e.fillText(t.label,t.x,t.y),e.shadowColor="transparent",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}drawOnCanvas(e,t,n){e.clearRect(0,0,t,n),this.edges.forEach(t=>this.drawEdgeOnCanvas(e,t)),this.vertices.forEach(t=>this.drawVertexOnCanvas(e,t))}drawEdgeOnCanvas(e,t){const n=t.color||this.edgeColor,o=t.width||this.edgeWidth,i=t.fontSize||this.edgeFontSize,r=t.fontFamily||this.edgeFontFamily,a=t.fontColor||this.edgeFontColor;if(e.strokeStyle=n,e.lineWidth=o,e.lineCap="round",e.lineJoin="round",e.beginPath(),"curved"===t.type){const n={x:(t.from.x+t.to.x)/2,y:(t.from.y+t.to.y)/2-40};e.moveTo(t.from.x,t.from.y),e.quadraticCurveTo(n.x,n.y,t.to.x,t.to.y)}else e.moveTo(t.from.x,t.from.y),e.lineTo(t.to.x,t.to.y);if(e.stroke(),"undirected"!==t.direction&&this.drawArrowOnCanvas(e,t),null!==t.weight&&""!==t.weight){let n,o;"curved"===t.type?(n=(t.from.x+t.to.x)/2,o=(t.from.y+t.to.y)/2-60):(n=(t.from.x+t.to.x)/2,o=(t.from.y+t.to.y)/2),e.fillStyle="dark"===this.currentTheme?"rgba(15, 23, 42, 0.9)":"rgba(255, 255, 255, 0.9)",e.fillRect(n-20,o-12,40,24),e.fillStyle=a,e.font=`bold ${i}px ${r}`,e.textAlign="center",e.textBaseline="middle",e.fillText(t.weight.toString(),n,o)}}drawArrowOnCanvas(e,t){const n=Math.PI/6;let o,i,r;if("curved"===t.type&&t.controlPoint){const e=t.controlPoint,n=t.to.x-e.x,o=t.to.y-e.y;r=Math.atan2(o,n)}else{const e=t.to.x-t.from.x,n=t.to.y-t.from.y;r=Math.atan2(n,e)}"directed-backward"===t.direction?(r+=Math.PI,o=t.from.x,i=t.from.y):(o=t.to.x,i=t.to.y);const a=(t.from.size||this.vertexSize)+5,s=o-a*Math.cos(r),d=i-a*Math.sin(r);e.strokeStyle=t.color||this.edgeColor,e.lineWidth=t.width||this.edgeWidth,e.lineCap="round",e.lineJoin="round",e.beginPath(),e.moveTo(s,d),e.lineTo(s-15*Math.cos(r-n),d-15*Math.sin(r-n)),e.moveTo(s,d),e.lineTo(s-15*Math.cos(r+n),d-15*Math.sin(r+n)),e.stroke()}drawVertexOnCanvas(e,t){const n=t.color||this.vertexColor,o=t.borderColor||this.vertexBorderColor,i=t.fontSize||this.vertexFontSize,r=t.fontFamily||this.vertexFontFamily,a=t.fontColor||this.vertexFontColor,s=t.size||this.vertexSize;e.beginPath(),e.arc(t.x,t.y,s,0,2*Math.PI),e.fillStyle=n,e.fill(),e.strokeStyle=o,e.lineWidth=2,e.stroke(),e.font=`${i}px ${r}`,e.fillStyle=a,e.textAlign="center",e.textBaseline="middle",e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowBlur=2,e.shadowOffsetX=1,e.shadowOffsetY=1,e.fillText(t.label,t.x,t.y),e.shadowColor="transparent",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}exportGraph(){return{vertices:this.vertices.map(e=>({id:e.id,x:e.x,y:e.y,label:e.label,color:e.color,borderColor:e.borderColor,fontSize:e.fontSize,fontFamily:e.fontFamily,fontColor:e.fontColor})),edges:this.edges.map(e=>({from:e.from.id,to:e.to.id,weight:e.weight,type:e.type,direction:e.direction,controlPoint:e.controlPoint,color:e.color,width:e.width,fontSize:e.fontSize,fontFamily:e.fontFamily,fontColor:e.fontColor})),nextVertexId:this.nextVertexId,vertexSize:this.vertexSize,edgeType:this.edgeType,edgeDirection:this.edgeDirection,theme:this.currentTheme,vertexColor:this.vertexColor,vertexBorderColor:this.vertexBorderColor,vertexFontSize:this.vertexFontSize,vertexFontFamily:this.vertexFontFamily,vertexFontColor:this.vertexFontColor,edgeColor:this.edgeColor,edgeWidth:this.edgeWidth,edgeFontSize:this.edgeFontSize,edgeFontFamily:this.edgeFontFamily,edgeFontColor:this.edgeFontColor}}importGraph(e){if(console.log("importGraph called",e),this.vertices=[],this.edges=[],this.selectedVertices=[],this.draggedVertex=null,this.visitedVertices.clear(),this.pathVertices.clear(),this.editingVertex=null,this.vertices=e.vertices.map(e=>({id:e.id,x:e.x,y:e.y,label:e.label,color:e.color,borderColor:e.borderColor,fontSize:e.fontSize,fontFamily:e.fontFamily,fontColor:e.fontColor})),this.edges=e.edges.map(e=>({from:this.vertices.find(t=>t.id===e.from),to:this.vertices.find(t=>t.id===e.to),weight:e.weight,type:e.type,direction:e.direction||"undirected",controlPoint:e.controlPoint,color:e.color,width:e.width,fontSize:e.fontSize,fontFamily:e.fontFamily,fontColor:e.fontColor})),this.nextVertexId=e.nextVertexId||this.vertices.length+1,this.vertexSize=e.vertexSize||25,this.edgeType=e.edgeType||"straight",this.edgeDirection=e.edgeDirection||"undirected",this.vertexColor=e.vertexColor||"#1e293b",this.vertexBorderColor=e.vertexBorderColor||"#475569",this.vertexFontSize=e.vertexFontSize||14,this.vertexFontFamily=e.vertexFontFamily||"Inter",this.vertexFontColor=e.vertexFontColor||"#ffffff",this.edgeColor=e.edgeColor||"#6366f1",this.edgeWidth=e.edgeWidth||3,this.edgeFontSize=e.edgeFontSize||14,this.edgeFontFamily=e.edgeFontFamily||"Inter",this.edgeFontColor=e.edgeFontColor||"#06b6d4",e.theme&&e.theme!==this.currentTheme){this.currentTheme=e.theme,document.documentElement.setAttribute("data-theme",this.currentTheme);const t=document.getElementById("themeToggle"),n=t.querySelector("i");"light"===this.currentTheme?(n.className="fas fa-sun",t.title="Switch to dark mode"):(n.className="fas fa-moon",t.title="Switch to light mode")}document.getElementById("editLabelGroup").style.display="none",this.lastSavedState=JSON.stringify({vertices:this.vertices.map(e=>({id:e.id,x:e.x,y:e.y,label:e.label})),edges:this.edges.map(e=>({from:e.from.id,to:e.to.id,weight:e.weight,type:e.type,direction:e.direction,controlPoint:e.controlPoint})),vertexSize:this.vertexSize,edgeType:this.edgeType,edgeDirection:this.edgeDirection,vertexColor:this.vertexColor,vertexBorderColor:this.vertexBorderColor,vertexFontSize:this.vertexFontSize,vertexFontFamily:this.vertexFontFamily,vertexFontColor:this.vertexFontColor,edgeColor:this.edgeColor,edgeWidth:this.edgeWidth,edgeFontSize:this.edgeFontSize,edgeFontFamily:this.edgeFontFamily,edgeFontColor:this.edgeFontColor}),this.updateInfo(),this.draw(),this.updateRootDropdown()}toggleTheme(){this.currentTheme="dark"===this.currentTheme?"light":"dark",document.documentElement.setAttribute("data-theme",this.currentTheme);const e=document.getElementById("themeToggle"),t=e.querySelector("i");"light"===this.currentTheme?(t.className="fas fa-sun",e.title="Switch to dark mode"):(t.className="fas fa-moon",e.title="Switch to light mode"),this.draw(),this.updateStatus(`Switched to ${this.currentTheme} mode`)}getMousePos(e){const t=this.canvas.getBoundingClientRect(),n=this.canvas.width/t.width,o=this.canvas.height/t.height;return{x:(e.clientX-t.left)*n,y:(e.clientY-t.top)*o}}handleCanvasClick(e){const t=this.getMousePos(e),n=this.getVertexAt(t.x,t.y),o=this.getEdgeAt(t.x,t.y);if(!o||"curved"!==o.type||!o.controlPoint)return n?(this.selectTargetVertex(n),void(this.isDistanceMode?this.handleDistanceModeClick(n):this.editModeElement===n&&this.editModeType)):void this.addVertex(t.x,t.y)}handleRightClick(e){e.preventDefault();const t=this.getMousePos(e),n=this.getVertexAt(t.x,t.y);n&&this.handleVertexRightClick(n)}handleVertexRightClick(e){if(0===this.selectedVertices.length)this.selectedVertices.push(e),this.updateStatus(`Selected vertex "${e.label}" - right-click another vertex to create edge`),this.draw();else if(1===this.selectedVertices.length){const t=this.selectedVertices[0],n=e;if(t.id===n.id)return this.updateStatus("Cannot create edge to same vertex"),this.selectedVertices=[],void this.draw();if(this.edges.find(e=>e.from.id===t.id&&e.to.id===n.id||e.from.id===n.id&&e.to.id===t.id))return this.updateStatus("Edge already exists between these vertices"),this.selectedVertices=[],void this.draw();this.selectedVertices.push(n),this.draw();const o=document.getElementById("edgeWeight"),i=o.value.trim()?parseFloat(o.value):null;this.addEdge(t,n,i),this.selectedVertices=[],this.flashVertices(t,n)}}handleVertexClick(e){this.isDistanceMode&&this.handleDistanceModeClick(e)}handleDistanceModeClick(e){if(this.distanceModeVertices.push(e),2===this.distanceModeVertices.length){this.flashDistanceVertices(this.distanceModeVertices[0],this.distanceModeVertices[1]);const{distance:e,path:t}=this.calculateShortestPathDistance(this.distanceModeVertices[0],this.distanceModeVertices[1]);this.showDistanceInfo(e,t),this.distanceModeVertices=[],this.isDistanceMode=!1,this.updateStatus("Distance calculated!")}else this.updateStatus("Click another vertex to calculate distance");this.draw()}calculateShortestPathDistance(e,t){if(e.id===t.id)return{distance:0,path:[e]};const n=this.getAdjacencyList(),o=[{vertex:e,distance:0}],i=new Set,r={};for(i.add(e.id);o.length>0;){const{vertex:e,distance:a}=o.shift();if(e.id===t.id){const t=[];let n=e;for(;n;)t.unshift(n),n=r[n.id];return{distance:a,path:t}}const s=n[e.id]||[];for(const t of s)i.has(t.id)||(i.add(t.id),r[t.id]=e,o.push({vertex:t,distance:a+1}))}return{distance:-1,path:[]}}handleMouseDown(e){const t=this.getMousePos(e),n=this.getVertexAt(t.x,t.y);n&&(this.longPressTimer=setTimeout(()=>{this.enterEditMode(n),this.updateStatus(`Editing vertex "${n.label}"`)},500),this.draggedVertex=n,this.isDragging=!0,this.dragStartX=t.x,this.dragStartY=t.y,this.canvas.style.cursor="grabbing",this.selectTargetVertex(n))}handleMouseMove(e){if(this.isDragging&&this.draggedVertex){const t=this.getMousePos(e);this.draggedVertex.x=t.x,this.draggedVertex.y=t.y,this.editModeElement===this.draggedVertex&&"vertex"===this.editModeType&&this.updateEditModeInfo(),this.draw()}else if(this.isDraggingEdge&&this.draggedEdge){const t=this.getMousePos(e);this.draggedEdge.controlPoint={x:t.x,y:t.y},this.draw()}else{const t=this.getMousePos(e),n=this.getVertexAt(t.x,t.y),o=this.getEdgeAt(t.x,t.y);n||o&&"curved"===o.type?this.canvas.style.cursor="grab":this.canvas.style.cursor="crosshair"}}handleMouseUp(e){this.longPressTimer&&(clearTimeout(this.longPressTimer),this.longPressTimer=null),this.isDragging&&this.draggedVertex&&(this.isDragging=!1,this.draggedVertex=null,this.canvas.style.cursor="crosshair"),this.isDraggingEdge&&this.draggedEdge&&(this.isDraggingEdge=!1,this.draggedEdge=null,this.canvas.style.cursor="crosshair",this.updateStatus("Edge curve adjusted"))}enterEditMode(e,t){this.exitEditMode(),this.editModeElement=e,this.editModeType=t,this.isLongPressing=!0,this.startShakeAnimation(),this.showEditControls(),this.updateStatus(("vertex"===t?"Vertex":"Edge")+" in edit mode - use sidebar to modify")}exitEditMode(){this.editModeElement&&(this.stopShakeAnimation(),this.hideEditControls(),this.editModeElement=null,this.editModeType=null,this.isLongPressing=!1,this.updateStatus("Edit mode exited"))}startShakeAnimation(){this.shakeOffset=0,this.shakeDirection=1;const e=()=>{this.editModeElement&&(this.shakeOffset+=2*this.shakeDirection,Math.abs(this.shakeOffset)>8&&(this.shakeDirection*=-1),this.draw(),this.shakeAnimation=requestAnimationFrame(e))};this.shakeAnimation=requestAnimationFrame(e)}stopShakeAnimation(){this.shakeAnimation&&(cancelAnimationFrame(this.shakeAnimation),this.shakeAnimation=null),this.shakeOffset=0,this.draw()}showEditControls(){const e=document.getElementById("stylingSection");e&&(e.style.display="none");const t=document.getElementById("editControlsSection");t&&(t.style.display="block");const n=document.getElementById("basicControlsSection");n&&(n.style.display="block");const o=document.getElementById("toolsSection");o&&(o.style.display="block");const i=document.getElementById("infoSection");i&&(i.style.display="block");const r=document.getElementById("saveLoadSection");r&&(r.style.display="block");const a=document.getElementById("searchSection");a&&(a.style.display="block"),document.getElementById("applyToAllVertices").checked=!1,document.getElementById("applyToAllEdges").checked=!1,this.applyToAllVertices=!1,this.applyToAllEdges=!1;const s=document.getElementById("editModeInfo");if(s)if("vertex"===this.editModeType){const e=this.edges.filter(e=>e.from.id===this.editModeElement.id||e.to.id===this.editModeElement.id).length;s.innerHTML=`\n                    <div class="edit-mode-item">\n                        <i class="fas fa-circle"></i>\n                        <strong>Vertex:</strong> ${this.editModeElement.label}\n                    </div>\n                    <div class="edit-mode-item">\n                        <i class="fas fa-map-marker-alt"></i>\n                        <strong>Position:</strong> (${Math.round(this.editModeElement.x)}, ${Math.round(this.editModeElement.y)})\n                    </div>\n                    <div class="edit-mode-item">\n                        <i class="fas fa-link"></i>\n                        <strong>Connected Edges:</strong> ${e}\n                    </div>\n                `,document.getElementById("vertexEditControls").style.display="block",document.getElementById("edgeEditControls").style.display="none",document.getElementById("editVertexColor").value=this.editModeElement.color||this.vertexColor,document.getElementById("editVertexBorderColor").value=this.editModeElement.borderColor||this.vertexBorderColor,document.getElementById("editVertexSize").value=this.editModeElement.size||this.vertexSize,document.getElementById("editVertexSizeValue").textContent=this.editModeElement.size||this.vertexSize,document.getElementById("editVertexFontSize").value=this.editModeElement.fontSize||this.vertexFontSize,document.getElementById("editVertexFontSizeValue").textContent=this.editModeElement.fontSize||this.vertexFontSize,document.getElementById("editVertexFontFamily").value=this.editModeElement.fontFamily||this.vertexFontFamily,document.getElementById("editVertexFontColor").value=this.editModeElement.fontColor||this.vertexFontColor,document.getElementById("editVertexLabel").value=this.editModeElement.label}else"edge"===this.editModeType&&(s.innerHTML=`\n                    <div class="edit-mode-item">\n                        <i class="fas fa-minus"></i>\n                        <strong>Edge:</strong> ${this.editModeElement.from.label} → ${this.editModeElement.to.label}\n                    </div>\n                    <div class="edit-mode-item">\n                        <i class="fas fa-weight-hanging"></i>\n                        <strong>Weight:</strong> ${this.editModeElement.weight||"None"}\n                    </div>\n                    <div class="edit-mode-item">\n                        <i class="fas fa-wave-square"></i>\n                        <strong>Type:</strong> ${this.editModeElement.type||"straight"}\n                    </div>\n                    <div class="edit-mode-item">\n                        <i class="fas fa-arrow-right"></i>\n                        <strong>Direction:</strong> ${this.editModeElement.direction||"undirected"}\n                    </div>\n                `,document.getElementById("edgeEditControls").style.display="block",document.getElementById("vertexEditControls").style.display="none",document.getElementById("editEdgeColor").value=this.editModeElement.color||this.edgeColor,document.getElementById("editEdgeWidth").value=this.editModeElement.width||this.edgeWidth,document.getElementById("editEdgeWidthValue").textContent=this.editModeElement.width||this.edgeWidth,document.getElementById("editEdgeFontSize").value=this.editModeElement.fontSize||this.edgeFontSize,document.getElementById("editEdgeFontSizeValue").textContent=this.editModeElement.fontSize||this.edgeFontSize,document.getElementById("editEdgeFontFamily").value=this.editModeElement.fontFamily||this.edgeFontFamily,document.getElementById("editEdgeFontColor").value=this.editModeElement.fontColor||this.edgeFontColor)}hideEditControls(){const e=document.getElementById("editControlsSection");e&&(e.style.display="none"),document.querySelectorAll(".control-section").forEach(e=>{"editControlsSection"!==e.id&&(e.style.display="block")})}deleteSelectedElement(){this.editModeElement&&this.editModeType&&("vertex"===this.editModeType?(this.edges=this.edges.filter(e=>e.from.id!==this.editModeElement.id&&e.to.id!==this.editModeElement.id),this.vertices=this.vertices.filter(e=>e.id!==this.editModeElement.id),this.updateStatus(`Vertex "${this.editModeElement.label}" deleted`)):"edge"===this.editModeType&&(this.edges=this.edges.filter(e=>e!==this.editModeElement),this.updateStatus("Edge deleted")),this.exitEditMode(),this.updateInfo(),this.draw(),this.updateRootDropdown())}getVertexAt(e,t){return this.vertices.find(n=>Math.sqrt((n.x-e)**2+(n.y-t)**2)<=this.vertexSize)}getEdgeAt(e,t){return this.edges.find(n=>!("curved"!==n.type||!n.controlPoint)&&Math.sqrt((n.controlPoint.x-e)**2+(n.controlPoint.y-t)**2)<=this.edgeControlPointSize)}addVertex(e,t){let n=document.getElementById("vertexLabel").value.trim();if(n){if(this.vertices.find(e=>e.label===n))return void this.updateStatus(`Label "${n}" already exists! Each vertex must have a unique label.`)}else n=this.findNextAvailableLabel();const o={id:this.nextVertexId++,x:e,y:t,label:n};this.vertices.push(o),this.updateInfo(),this.draw(),this.updateStatus(`Vertex "${n}" added!`),this.selectTargetVertex(o),document.getElementById("vertexLabel").value="",this.updateRootDropdown(),this.autosaveEnabled&&this.saveGraph(!0)}findNextAvailableLabel(){const e=this.vertices.map(e=>e.label);let t=1;for(;e.includes(t.toString());)t++;return t.toString()}addEdge(e,t,n=null){if(this.edges.find(n=>n.from===e&&n.to===t||n.from===t&&n.to===e))this.updateStatus(`Edge already exists between vertices "${e.label}" and "${t.label}"`);else{const o={from:e,to:t,weight:n,type:this.edgeType,direction:this.edgeDirection};this.edges.push(o);const i=n?` (weight: ${n})`:"";this.updateStatus(`Edge created between vertices "${e.label}" and "${t.label}"${i}`)}this.draw(),this.updateInfo(),this.autosaveEnabled&&this.saveGraph(!0)}getAdjacencyList(){const e={};return this.vertices.forEach(t=>{e[t.id]=[]}),this.edges.forEach(t=>{e[t.from.id].push(t.to),e[t.to.id].push(t.from)}),e}findVertexByLabel(e){return this.vertices.find(t=>t.label===e)}findMostUpwardVertex(){return 0===this.vertices.length?null:this.vertices.reduce((e,t)=>t.y<e.y?t:e)}async runBFS(){if(!this.selectedTargetVertex)return void this.updateStatus("Please select a target vertex first");const e=document.getElementById("searchRoot").value,t=this.selectedTargetVertex;if(0===this.vertices.length)return void this.updateStatus("No vertices to search");let n;if(e){if(n=this.findVertexByLabel(e),!n)return void this.updateStatus(`Root vertex "${e}" not found`)}else n=this.findMostUpwardVertex();const o=this.getAdjacencyList();o[n.id]&&0!==o[n.id].length?(this.startSearch(),await this.animateBFS(t,n)):this.updateStatus("Root node must be connected to at least one other node")}async runDFS(){if(!this.selectedTargetVertex)return void this.updateStatus("Please select a target vertex first");const e=document.getElementById("searchRoot").value,t=this.selectedTargetVertex;if(0===this.vertices.length)return void this.updateStatus("No vertices to search");let n;if(e){if(n=this.findVertexByLabel(e),!n)return void this.updateStatus(`Root vertex "${e}" not found`)}else n=this.findMostUpwardVertex();const o=this.getAdjacencyList();o[n.id]&&0!==o[n.id].length?(this.startSearch(),await this.animateDFS(t,n)):this.updateStatus("Root node must be connected to at least one other node")}startSearch(){this.isSearching=!0,this.visitedVertices.clear(),this.pathVertices.clear(),document.getElementById("runBFS").disabled=!0,document.getElementById("runDFS").disabled=!0,document.getElementById("stopSearch").disabled=!1,this.updateStatus("Searching...")}stopSearch(){this.isSearching=!1,this.visitedVertices.clear(),this.pathVertices.clear(),document.getElementById("runBFS").disabled=!1,document.getElementById("runDFS").disabled=!1,document.getElementById("stopSearch").disabled=!0,this.draw(),this.updateStatus("Search stopped")}async animateBFS(e,t){const n=this.getAdjacencyList(),o=[t],i=new Set,r={};for(i.add(t.id);o.length>0&&this.isSearching;){const t=o.shift();if(this.visitedVertices.add(t),this.draw(),await this.sleep(500),t.id===e.id)return this.reconstructPath(r,e),void this.showSearchResult(!0,"BFS");const a=n[t.id]||[];for(const e of a)i.has(e.id)||(i.add(e.id),r[e.id]=t,o.push(e))}this.isSearching&&this.showSearchResult(!1,"BFS")}async animateDFS(e,t){const n=this.getAdjacencyList(),o=new Set,i={},r=async t=>{if(!this.isSearching)return!1;if(o.add(t.id),this.visitedVertices.add(t),this.draw(),await this.sleep(500),t.id===e.id)return this.reconstructPath(i,e),this.showSearchResult(!0,"DFS"),!0;const a=n[t.id]||[];for(const e of a)if(!o.has(e.id)&&(i[e.id]=t,await r(e)))return!0;return!1};!await r(t)&&this.isSearching&&this.showSearchResult(!1,"DFS")}reconstructPath(e,t){const n=[];let o=t;for(;o;)n.unshift(o),o=e[o.id];this.pathVertices=new Set(n),this.draw()}showSearchResult(e,t){this.isSearching=!1,document.getElementById("runBFS").disabled=!1,document.getElementById("runDFS").disabled=!1,document.getElementById("stopSearch").disabled=!0;const n=document.getElementById("searchInfo");e?(n.textContent=`${t} found target! Path length: ${this.pathVertices.size}`,this.updateStatus(`${t} found target vertex!`)):(n.textContent=`${t} did not find target vertex`,this.updateStatus(`${t} completed - target not found`)),n.classList.add("show"),setTimeout(()=>{this.visitedVertices.clear(),this.pathVertices.clear(),n.classList.remove("show"),this.draw()},5e3)}sleep(e){return new Promise(t=>setTimeout(t,e))}startVertexLabelEdit(e){this.editingVertex=e,this.selectedVertices=[e],document.getElementById("editLabelGroup").style.display="block",document.getElementById("editVertexLabel").value=e.label,document.getElementById("editingVertexLabel").textContent=e.label,document.getElementById("editVertexLabel").focus(),document.getElementById("editVertexLabel").select(),this.draw(),this.updateStatus(`Editing vertex "${e.label}" - Press Enter to save, Escape to cancel`)}saveVertexLabel(){if(!this.editingVertex)return;const e=document.getElementById("editVertexLabel").value.trim();if(!e)return void this.updateStatus("Label cannot be empty!");if(this.vertices.find(t=>t.label===e&&t.id!==this.editingVertex.id))return void this.updateStatus(`Label "${e}" already exists! Each vertex must have a unique label.`);const t=this.editingVertex.label;this.editingVertex.label=e,this.cancelVertexLabelEdit(),this.draw(),this.updateStatus(`Vertex label changed from "${t}" to "${e}"`),this.updateRootDropdown()}cancelVertexLabelEdit(){this.editingVertex=null,this.selectedVertices=[],document.getElementById("editLabelGroup").style.display="none",document.getElementById("editVertexLabel").value="",document.getElementById("editingVertexLabel").textContent="",this.draw(),this.updateStatus("Label editing cancelled")}hasUnsavedChanges(){return this.lastSavedState?JSON.stringify({vertices:this.vertices.map(e=>({id:e.id,x:e.x,y:e.y,label:e.label})),edges:this.edges.map(e=>({from:e.from.id,to:e.to.id,weight:e.weight,type:e.type,direction:e.direction,controlPoint:e.controlPoint})),vertexSize:this.vertexSize,edgeType:this.edgeType,edgeDirection:this.edgeDirection,vertexColor:this.vertexColor,vertexBorderColor:this.vertexBorderColor,vertexFontSize:this.vertexFontSize,vertexFontFamily:this.vertexFontFamily,vertexFontColor:this.vertexFontColor,edgeColor:this.edgeColor,edgeWidth:this.edgeWidth,edgeFontSize:this.edgeFontSize,edgeFontFamily:this.edgeFontFamily,edgeFontColor:this.edgeFontColor})!==this.lastSavedState:this.vertices.length>0||this.edges.length>0}showLoadConfirmation(){if(console.log("showLoadConfirmation function called"),!this.hasUnsavedChanges())return void this.showLoadDialog();const e=document.createElement("div");e.className="modal-overlay",e.innerHTML='\n            <div class="modal-content">\n                <h3><i class="fas fa-exclamation-triangle"></i> Unsaved Changes</h3>\n                <p>You have unsaved changes in your current graph. What would you like to do?</p>\n                <div class="modal-buttons">\n                    <button class="btn btn-success" id="saveAndLoadBtn">\n                        <i class="fas fa-save"></i> Save & Load\n                    </button>\n                    <button class="btn btn-warning" id="loadWithoutSaveBtn">\n                        <i class="fas fa-folder-open"></i> Load Without Saving\n                    </button>\n                    <button class="btn btn-secondary" id="cancelLoadBtn">\n                        <i class="fas fa-times"></i> Cancel\n                    </button>\n                </div>\n            </div>\n        ',document.body.appendChild(e),document.getElementById("saveAndLoadBtn").addEventListener("click",()=>{this.saveCurrentGraphAndLoad(),document.body.removeChild(e)}),document.getElementById("loadWithoutSaveBtn").addEventListener("click",()=>{this.showLoadDialog(),document.body.removeChild(e)}),document.getElementById("cancelLoadBtn").addEventListener("click",()=>{document.body.removeChild(e)})}saveCurrentGraphAndLoad(){const e=this.exportGraph(),t=(new Date).toISOString(),n=this.getTimestampString(),o={id:Date.now(),name:n,data:e,timestamp:t,vertices:this.vertices.length,edges:this.edges.length};this.savedGraphs.unshift(o),this.savedGraphs.length>10&&(this.savedGraphs=this.savedGraphs.slice(0,10));try{localStorage.setItem("savedGraphs",JSON.stringify(this.savedGraphs)),this.updateSavedGraphsList(),this.updateStatus("Current graph saved before loading new graph")}catch(e){console.error("Failed to save graph:",e),this.updateStatus("Failed to save current graph")}this.showLoadDialog()}showLoadDialog(){const e=document.createElement("div");e.className="modal-overlay",e.innerHTML=`\n            <div class="modal-content">\n                <h3><i class="fas fa-folder-open"></i> Load Graph</h3>\n                <div class="load-options">\n                    <div class="load-section">\n                        <h4><i class="fas fa-history"></i> Recent Graphs</h4>\n                        <div id="loadRecentGraphs" class="load-graphs-list">\n                            ${0===this.savedGraphs.length?'<p class="no-graphs">No saved graphs found</p>':""}\n                        </div>\n                    </div>\n                    <div class="load-section">\n                        <h4><i class="fas fa-upload"></i> Import from File</h4>\n                        <input type="file" id="loadFileInputModal" accept=".json" style="display: none;">\n                        <button class="btn btn-secondary" id="browseFileBtn">\n                            <i class="fas fa-folder"></i> Browse Files\n                        </button>\n                    </div>\n                </div>\n                <div class="modal-buttons">\n                    <button class="btn btn-secondary" id="cancelLoadDialogBtn">\n                        <i class="fas fa-times"></i> Cancel\n                    </button>\n                </div>\n            </div>\n        `,document.body.appendChild(e),this.populateLoadRecentGraphs(),document.getElementById("browseFileBtn").addEventListener("click",()=>{document.getElementById("loadFileInputModal").click()}),document.getElementById("loadFileInputModal").addEventListener("change",t=>{this.handleFileLoad(t),document.body.removeChild(e)}),document.getElementById("cancelLoadDialogBtn").addEventListener("click",()=>{document.body.removeChild(e)})}populateLoadRecentGraphs(){const e=document.getElementById("loadRecentGraphs");e&&(e.innerHTML="",this.savedGraphs.forEach((t,n)=>{const o=document.createElement("div");o.className="load-graph-item",o.innerHTML=`\n                <div class="load-graph-info">\n                    <div class="load-graph-name">${t.name}</div>\n                    <div class="load-graph-details">${t.vertices} vertices, ${t.edges} edges</div>\n                    <div class="load-graph-time">${new Date(t.timestamp).toLocaleString()}</div>\n                </div>\n                <button class="btn btn-primary load-graph-btn" data-index="${n}">\n                    <i class="fas fa-download"></i> Load\n                </button>\n            `,o.querySelector(".load-graph-btn").addEventListener("click",()=>{this.loadSavedGraphWithConfirmation(t),document.body.removeChild(document.querySelector(".modal-overlay"))}),e.appendChild(o)}))}toggleDistanceMode(){this.isDistanceMode=!this.isDistanceMode,this.distanceModeVertices=[],this.selectedVertices=[],this.isDistanceMode?(document.getElementById("calculateDistance").classList.add("active"),this.updateStatus("Distance mode: Click two vertices to calculate shortest path distance")):(document.getElementById("calculateDistance").classList.remove("active"),this.updateStatus("Distance mode disabled")),this.draw()}showDistanceInfo(e,t){const n=document.getElementById("distanceInfo"),o=document.getElementById("pathInfo");-1===e?(n.textContent="No path exists between these vertices",o.textContent=""):0===e?(n.textContent="Same vertex selected",o.textContent=""):(n.textContent=`Shortest path distance: ${e} edge${1!==e?"s":""}`,o.textContent=`Path: ${t.map(e=>e.label).join(" -> ")}`),n.classList.add("show"),o.classList.add("show"),setTimeout(()=>{n.classList.remove("show"),o.classList.remove("show")},5e3)}clearGraph(){this.vertices=[],this.edges=[],this.nextVertexId=1,this.selectedVertices=[],this.draggedVertex=null,this.isDragging=!1,this.distanceModeVertices=[],this.isDistanceMode=!1,this.visitedVertices.clear(),this.pathVertices.clear(),this.isSearching=!1,this.editingVertex=null,this.selectedTargetVertex=null,this.updateTargetVertexDisplay(),this.vertexColor="#1e293b",this.vertexBorderColor="#475569",this.vertexFontSize=14,this.vertexFontFamily="Inter",this.vertexFontColor="#ffffff",this.edgeColor="#6366f1",this.edgeWidth=3,this.edgeFontSize=14,this.edgeFontFamily="Inter",this.edgeFontColor="#06b6d4",document.getElementById("distanceInfo").classList.remove("show"),document.getElementById("searchInfo").classList.remove("show"),document.getElementById("calculateDistance").classList.remove("active"),document.getElementById("runBFS").disabled=!1,document.getElementById("runDFS").disabled=!1,document.getElementById("stopSearch").disabled=!0,document.getElementById("editLabelGroup").style.display="none",this.lastSavedState=null,this.currentGraphId=null,this.updateInfo(),this.draw(),this.updateStatus("Graph cleared!"),this.updateRootDropdown()}hideInstructions(){document.getElementById("instructionsOverlay").style.display="none",this.updateStatus("Instructions hidden. You can start creating your graph!")}updateInfo(){document.getElementById("vertexCount").textContent=this.vertices.length,document.getElementById("edgeCount").textContent=this.edges.length}updateStatus(e){document.getElementById("statusMessage").textContent=e}updateTime(){const e=(new Date).toLocaleTimeString();document.getElementById("currentTime").textContent=e}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.edges.forEach(e=>this.drawEdge(e)),this.vertices.forEach(e=>this.drawVertex(e))}drawEdge(e){let t=e.from.x,n=e.from.y,o=e.to.x,i=e.to.y;this.editModeElement===e&&"edge"===this.editModeType&&(t+=this.shakeOffset,n+=.5*this.shakeOffset,o+=this.shakeOffset,i+=.5*this.shakeOffset);let r=e.color||this.edgeColor,a=e.width||this.edgeWidth,s=e.fontSize||this.edgeFontSize,d=e.fontFamily||this.edgeFontFamily,l=e.fontColor||this.edgeFontColor;if(this.editModeElement===e&&"edge"===this.editModeType&&(r="#ef4444"),this.ctx.strokeStyle=r,this.ctx.lineWidth=a,this.ctx.lineCap="round",this.ctx.beginPath(),"curved"===e.type){const t={x:(e.from.x+e.to.x)/2,y:(e.from.y+e.to.y)/2-40};this.ctx.moveTo(e.from.x,e.from.y),this.ctx.quadraticCurveTo(t.x,t.y,e.to.x,e.to.y)}else this.ctx.moveTo(e.from.x,e.from.y),this.ctx.lineTo(e.to.x,e.to.y);if(this.ctx.stroke(),"undirected"!==e.direction&&this.drawArrow(e),null!==e.weight&&""!==e.weight){let t,n;"curved"===e.type?(t=(e.from.x+e.to.x)/2,n=(e.from.y+e.to.y)/2-60):(t=(e.from.x+e.to.x)/2,n=(e.from.y+e.to.y)/2),this.ctx.fillStyle="dark"===this.currentTheme?"rgba(15, 23, 42, 0.9)":"rgba(255, 255, 255, 0.9)",this.ctx.fillRect(t-20,n-12,40,24),this.ctx.fillStyle=l,this.ctx.font=`bold ${s}px ${d}`,this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(e.weight.toString(),t,n)}this.editModeElement===e&&"edge"===this.editModeType&&(this.ctx.shadowColor="#ef4444",this.ctx.shadowBlur=15,this.ctx.stroke(),this.ctx.shadowBlur=0)}drawVertex(e){const t=this.ctx,n=e.size||this.vertexSize,o=this.selectedVertices.includes(e),i=this.flashingVertices.has(e),r=this.distanceFlashingVertices&&this.distanceFlashingVertices.has(e);let a=e.color||this.vertexColor,s=e.borderColor||this.vertexBorderColor;o||i?(a="#8b5cf6",s="#a855f7"):r?(a="#3b82f6",s="#60a5fa"):this.visitedVertices.has(e)?(a="#10b981",s="#34d399"):this.pathVertices.has(e)?(a="#f59e0b",s="#fbbf24"):this.distanceModeVertices.includes(e)&&(a="#3b82f6",s="#60a5fa"),t.beginPath(),t.arc(e.x,e.y,n,0,2*Math.PI),t.fillStyle=a,t.fill(),t.strokeStyle=s,t.lineWidth=2,t.stroke();const d=e.fontSize||this.vertexFontSize,l=e.fontFamily||this.vertexFontFamily,c=e.fontColor||this.vertexFontColor;t.font=`${d}px ${l}`,t.fillStyle=c,t.textAlign="center",t.textBaseline="middle",t.shadowColor="rgba(0, 0, 0, 0.5)",t.shadowBlur=2,t.shadowOffsetX=1,t.shadowOffsetY=1,t.fillText(e.label,e.x,e.y),t.shadowColor="transparent",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}drawArrow(e){const t=Math.PI/6;let n,o,i;if("curved"===e.type&&e.controlPoint){const t=e.controlPoint,n=e.to.x-t.x,o=e.to.y-t.y;i=Math.atan2(o,n)}else{const t=e.to.x-e.from.x,n=e.to.y-e.from.y;i=Math.atan2(n,t)}"directed-backward"===e.direction?(i+=Math.PI,n=e.from.x,o=e.from.y):(n=e.to.x,o=e.to.y);const r=this.vertexSize+5,a=n-r*Math.cos(i),s=o-r*Math.sin(i);this.ctx.strokeStyle=this.edgeColor,this.ctx.lineWidth=this.edgeWidth,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.beginPath(),this.ctx.moveTo(a,s),this.ctx.lineTo(a-15*Math.cos(i-t),s-15*Math.sin(i-t)),this.ctx.moveTo(a,s),this.ctx.lineTo(a-15*Math.cos(i+t),s-15*Math.sin(i+t)),this.ctx.stroke()}adjustColor(e,t){const n=e.replace("#",""),o=parseInt(n,16);return`#${(Math.max(0,Math.min(255,(o>>16)+t))<<16|Math.max(0,Math.min(255,(o>>8&255)+t))<<8|Math.max(0,Math.min(255,(255&o)+t))).toString(16).padStart(6,"0")}`}updateRootDropdown(){const e=document.getElementById("searchRoot");if(!e)return;const t=e.value;for(;e.options.length>1;)e.remove(1);this.vertices.forEach(t=>{const n=document.createElement("option");n.value=t.label,n.textContent=t.label,e.appendChild(n)}),t&&Array.from(e.options).some(e=>e.value===t)?e.value=t:e.value=""}setupResetTargetBtn(){const e=document.getElementById("resetTargetBtn");console.log("Reset button found:",e),e?e.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),console.log("Reset button clicked"),this.clearTargetVertex()}):console.error("Reset target button not found!")}selectTargetVertex(e){this.selectedTargetVertex=e,this.updateTargetVertexDisplay()}updateTargetVertexDisplay(){const e=document.getElementById("targetVertexDisplay");this.selectedTargetVertex?(e.innerHTML=`\n                <div class="target-vertex-info">\n                    <div class="target-vertex-icon">${this.selectedTargetVertex.label}</div>\n                    <span class="target-vertex-label">Vertex ${this.selectedTargetVertex.label}</span>\n                    <span class="target-vertex-coords">(${Math.round(this.selectedTargetVertex.x)}, ${Math.round(this.selectedTargetVertex.y)})</span>\n                </div>\n            `,e.classList.add("has-target")):(e.innerHTML='<span class="target-placeholder">Click on any vertex to set as target</span>',e.classList.remove("has-target"))}clearTargetVertex(){this.selectedTargetVertex=null,this.updateTargetVertexDisplay()}applyVertexEdit(e,t){if("vertex"===this.editModeType){if(this.applyToAllVertices)this.vertices.forEach(n=>{"size"===e?n.size=t:"label"===e?t&&t.trim()&&(this.vertices.find(e=>e.id!==n.id&&e.label===t.trim())||(n.label=t.trim())):n[e]=t}),this.updateStatus(`Applied ${e} to all vertices`);else{if("size"===e)this.editModeElement.size=t;else if("label"===e){if(t&&t.trim()){if(this.vertices.find(e=>e.id!==this.editModeElement.id&&e.label===t.trim()))return void this.updateStatus(`Label "${t.trim()}" already exists!`);this.editModeElement.label=t.trim()}}else this.editModeElement[e]=t;this.updateStatus(`Updated vertex ${e}`)}this.draw(),this.updateEditModeInfo(),this.updateRootDropdown()}}applyEdgeEdit(e,t){"edge"===this.editModeType&&(this.applyToAllEdges?(this.edges.forEach(n=>{n[e]=t}),this.updateStatus(`Applied ${e} to all edges`)):(this.editModeElement[e]=t,this.updateStatus(`Updated edge ${e}`)),this.draw(),this.updateEditModeInfo())}saveAndExitEditMode(){this.editModeElement&&this.editModeType&&(this.updateStatus(("vertex"===this.editModeType?"Vertex":"Edge")+" changes saved"),this.exitEditMode())}updateEditModeInfo(){if(!this.editModeElement||!this.editModeType)return;const e=document.getElementById("editModeInfo");if(e)if("vertex"===this.editModeType){const t=this.applyToAllVertices?'<div class="edit-mode-item" style="color: var(--warning-color); font-weight: 600;"><i class="fas fa-exclamation-triangle"></i> <strong>⚠️ APPLYING TO ALL VERTICES</strong></div>':"";e.innerHTML=`\n                ${t}\n                <div class="edit-mode-item">\n                    <i class="fas fa-circle"></i>\n                    <strong>Vertex:</strong> ${this.editModeElement.label}\n                </div>\n                <div class="edit-mode-item">\n                    <i class="fas fa-map-marker-alt"></i>\n                    <strong>Position:</strong> (${Math.round(this.editModeElement.x)}, ${Math.round(this.editModeElement.y)})\n                </div>\n                <div class="edit-mode-item">\n                    <i class="fas fa-expand-arrows-alt"></i>\n                    <strong>Size:</strong> ${this.editModeElement.size||this.vertexSize}\n                </div>\n            `}else if("edge"===this.editModeType){const t=this.applyToAllEdges?'<div class="edit-mode-item" style="color: var(--warning-color); font-weight: 600;"><i class="fas fa-exclamation-triangle"></i> <strong>⚠️ APPLYING TO ALL EDGES</strong></div>':"";e.innerHTML=`\n                ${t}\n                <div class="edit-mode-item">\n                    <i class="fas fa-minus"></i>\n                    <strong>Edge:</strong> ${this.editModeElement.from.label} → ${this.editModeElement.to.label}\n                </div>\n                <div class="edit-mode-item">\n                    <i class="fas fa-weight-hanging"></i>\n                    <strong>Weight:</strong> ${this.editModeElement.weight||"None"}\n                </div>\n            `}}enterEditMode(e){console.log("[EditMode] Entering edit mode for vertex:",e.label),this.exitEditMode(),this.editModeElement=e,this.editModeType="vertex",this.originalLabel=e.label,this.originalSize=e.size||this.vertexSize,console.log("[EditMode] Original values stored - label:",this.originalLabel,"size:",this.originalSize);const t=document.getElementById("editControlsSection");t?(t.style.display="block",console.log("[EditMode] Edit section displayed")):console.error("[EditMode] Edit section not found!"),document.querySelectorAll(".control-section").forEach(e=>{"editControlsSection"!==e.id&&(e.style.display="none")});const n=t.querySelector("h3");n&&(n.innerHTML=`<i class="fas fa-edit"></i> Edit Vertex "${e.label}"`,console.log("[EditMode] Title updated to show vertex:",e.label));const o=document.getElementById("editVertexLabel"),i=document.getElementById("editVertexSize"),r=document.getElementById("editVertexSizeValue");o&&i&&r?(o.value=e.label,i.value=e.size||this.vertexSize,r.textContent=e.size||this.vertexSize,console.log("[EditMode] Form populated - label:",e.label,"size:",e.size||this.vertexSize)):console.error("[EditMode] Form elements not found!"),o.style.borderColor="",o.style.boxShadow="";const a=document.getElementById("editVertexLabelWarning");a&&(a.textContent=""),setTimeout(()=>{o&&(o.focus(),o.select(),console.log("[EditMode] Label input focused and selected"))},100)}exitEditMode(){this.editModeElement=null,this.editModeType=null,this.originalLabel=null,this.originalSize=null;const e=document.getElementById("editControlsSection");e&&(e.style.display="none"),document.querySelectorAll(".control-section").forEach(e=>{"editControlsSection"!==e.id&&(e.style.display="block")});const t=e?.querySelector("h3");t&&(t.innerHTML='<i class="fas fa-edit"></i> Edit Vertex'),this.draw()}setupMinimalEditModeEvents(){const e=document.getElementById("editVertexLabel"),t=document.getElementById("saveVertexEdit");let n=document.getElementById("editVertexLabelWarning");n||(n=document.createElement("div"),n.id="editVertexLabelWarning",n.style.color="var(--danger-color)",n.style.fontSize="0.8rem",n.style.marginTop="0.25rem",n.style.fontWeight="500",e.parentElement.appendChild(n)),e.addEventListener("input",t=>{if(console.log("[EditMode] Label input event fired"),this.editModeElement){const o=t.target.value;console.log("[EditMode] New label:",o),this.editModeElement.label=o,this.draw(),this.updateRootDropdown();const i=o.trim();let r="";i?this.vertices.some(e=>e!==this.editModeElement&&e.label===i)&&(r=`Label "${i}" already exists!`):r="Label cannot be empty.",r?(e.style.borderColor="var(--danger-color)",e.style.boxShadow="0 0 0 3px rgba(239, 68, 68, 0.1)",n.textContent=r,console.log("[EditMode] Validation warning:",r)):(e.style.borderColor="",e.style.boxShadow="",n.textContent="",console.log("[EditMode] Label valid"))}else console.log("[EditMode] No editModeElement set")}),document.getElementById("editVertexSize").addEventListener("input",e=>{const t=parseInt(e.target.value);document.getElementById("editVertexSizeValue").textContent=t,this.editModeElement&&(this.editModeElement.size=t,this.draw())}),t.addEventListener("click",e=>{e.preventDefault(),this.editModeElement&&(console.log("[EditMode] Save clicked - exiting edit mode"),this.exitEditMode(),this.updateStatus("Vertex updated successfully!"))}),document.getElementById("cancelVertexEdit").addEventListener("click",t=>{t.preventDefault(),this.editModeElement&&null!==this.originalLabel&&(this.editModeElement.label=this.originalLabel,this.editModeElement.size=this.originalSize,e.style.borderColor="",e.style.boxShadow="",n.textContent="",this.exitEditMode(),this.updateRootDropdown(),this.draw(),this.updateStatus("Edit cancelled - changes reverted."),console.log("[EditMode] Cancel clicked, reverted to original values"))}),document.getElementById("vertexEditForm").addEventListener("submit",e=>{e.preventDefault(),t.click()})}flashVertices(e,t){this.flashingVertices.add(e),this.flashingVertices.add(t),this.draw(),this.flashTimer=setTimeout(()=>{this.flashingVertices.clear(),this.draw()},1e3)}flashDistanceVertices(e,t){this.distanceFlashingVertices=new Set([e,t]),this.draw(),setTimeout(()=>{this.distanceFlashingVertices=null,this.draw()},1e3)}editSavedGraphName(e,t){const n=this.savedGraphs[e];if(!n)return;const o=document.createElement("input");o.type="text",o.value=n.name,o.style.cssText="\n            width: 100%;\n            padding: 0.25rem 0.5rem;\n            border: 1px solid var(--primary-color);\n            border-radius: var(--radius-sm);\n            background: var(--bg-secondary);\n            color: var(--text-primary);\n            font-size: 0.875rem;\n            font-weight: 500;\n        ";const i=t.innerHTML;t.innerHTML="",t.appendChild(o),o.focus(),o.select();const r=()=>{const r=o.value.trim();if(r&&r!==n.name){if(this.savedGraphs.some((t,n)=>n!==e&&t.name===r))return void this.updateStatus(`Name "${r}" already exists!`);n.name=r;try{localStorage.setItem("savedGraphs",JSON.stringify(this.savedGraphs)),this.updateSavedGraphsList(),this.updateStatus(`Graph renamed to "${r}"`)}catch(e){console.error("Failed to save graph name:",e),this.updateStatus("Failed to save graph name")}}else t.innerHTML=i};o.addEventListener("blur",r),o.addEventListener("keydown",e=>{"Enter"===e.key?r():"Escape"===e.key&&(t.innerHTML=i)})}setupExpandableSections(){const e=document.getElementById("searchSectionHeader"),t=document.getElementById("searchSectionContent"),n=document.getElementById("searchExpandIcon");e&&t&&n&&e.addEventListener("click",()=>{e.classList.contains("expanded")?(t.style.display="none",t.classList.remove("show"),e.classList.remove("expanded"),n.style.transform="rotate(0deg)"):(t.style.display="block",t.classList.add("show"),e.classList.add("expanded"),n.style.transform="rotate(180deg)")})}deleteSavedGraph(e){if(!confirm("Are you sure you want to delete this saved graph?"))return;const t=this.savedGraphs.findIndex(t=>t.id===e);if(-1!==t){this.savedGraphs.splice(t,1);try{localStorage.setItem("savedGraphs",JSON.stringify(this.savedGraphs)),this.updateSavedGraphsList(),this.updateStatus("Saved graph deleted")}catch(e){console.error("Failed to delete saved graph:",e),this.updateStatus("Failed to delete saved graph")}}}showContactModal(){document.getElementById("contactForm").reset(),new bootstrap.Modal(document.getElementById("contactModal")).show()}handleContactSubmit(){const e={name:document.getElementById("contactName").value,email:document.getElementById("contactEmail").value,subject:document.getElementById("contactSubject").value,message:document.getElementById("contactMessage").value};console.log("Contact form submitted:",e),this.updateStatus("Thank you for your message! I'll get back to you soon."),bootstrap.Modal.getInstance(document.getElementById("contactModal")).hide(),document.getElementById("contactForm").reset()}}document.addEventListener("DOMContentLoaded",()=>{new f;var e=document.getElementById("instructionsOverlay"),t=document.querySelector(".modal-content.instructions-content"),n=document.getElementById("closeInstructionsX"),o=document.getElementById("hideInstructions");function i(){e&&(e.classList.remove("show"),e.style.display="none")}n&&n.addEventListener("click",i),o&&o.addEventListener("click",i),t&&t.addEventListener("click",function(e){e.target.closest("button, input, select, textarea, a")||i()}),e&&(e.addEventListener("mousedown",function(t){t.target===e&&i()}),e.addEventListener("touchstart",function(t){t.target===e&&i()}),setTimeout(i,1e4));const r=document.getElementById("themeToggle"),a=document.querySelectorAll(".sun-icon .pupil"),s=document.querySelectorAll(".moon-icon .pupil");document.addEventListener("mousemove",function(e){const t=r.getBoundingClientRect(),n=t.left+t.width/2,o=t.top+t.height/2,i=e.clientX-n,d=e.clientY-o,l=Math.max(-.5,Math.min(.5,.008*i)),c=Math.max(-.5,Math.min(.5,.008*d));[...a,...s].forEach(e=>{e.style.transform=`translate(${l}px, ${c}px)`})}),document.addEventListener("mouseleave",()=>{[...a,...s].forEach(e=>{e.style.transform="translate(0px, 0px)"})});const d=document.querySelector(".sidebar-content"),l=document.getElementById("scrollIndicator");function c(){if(d&&l){const e=d.scrollHeight>d.clientHeight,t=d.scrollTop+d.clientHeight>=d.scrollHeight-10;e&&!t?l.classList.add("show"):l.classList.remove("show")}}c(),window.addEventListener("resize",c),d&&d.addEventListener("scroll",c),l&&l.addEventListener("click",()=>{d&&d.scrollTo({top:d.scrollHeight,behavior:"smooth"}),l.classList.remove("show")})})})();